# ARCHIVE, based on i3.2xlarge, 64GB RAM and 1.9TB swap
#Define ARCHIVE_IP 172.31.24.90
#Define ARCHIVE_IP 172.31.24.90
#Define ARCHIVE_IP 172.31.20.25
#Define ARCHIVE_IP 172.31.16.178
#Define ARCHIVE_IP 172.31.25.130
#Define ARCHIVE_IP 172.31.25.246
#Define ARCHIVE_IP 172.31.24.192
#Define ARCHIVE_IP 172.31.22.16
# Failover (hanging in full gc):
#Define ARCHIVE_IP 172.31.29.138
# Production (hanging in full gc):
#Define ARCHIVE_IP 172.31.18.201
# New Candidate, not really ready...
#Define ARCHIVE_IP 172.31.28.255
#Define ARCHIVE_IP 172.31.21.159
#Define ARCHIVE_IP 172.31.19.41
#Define ARCHIVE_IP 172.31.29.206
#Define ARCHIVE_IP 172.31.25.194
#Define ARCHIVE_IP 172.31.17.130
#Define ARCHIVE_IP 172.31.20.156
#Define ARCHIVE_IP 172.31.28.168
#Define ARCHIVE_IP 172.31.23.135
#Define ARCHIVE_IP 172.31.16.245
#Define ARCHIVE_IP 172.31.29.3
#Define ARCHIVE_IP 172.31.20.157
#Define ARCHIVE_IP 172.31.17.35
#Define ARCHIVE_IP 172.31.28.236
#Define ARCHIVE_IP 172.31.16.207
#Define ARCHIVE_IP 172.31.26.1
#Define ARCHIVE_IP 172.31.21.3
#Define ARCHIVE_IP 172.31.28.73
#Define ARCHIVE_IP 172.31.17.113
#Define ARCHIVE_IP 172.31.30.211
#Define ARCHIVE_IP 172.31.20.222
#Define ARCHIVE_IP 172.31.21.139
#Define ARCHIVE_IP 172.31.23.47
#Define ARCHIVE_IP 172.31.20.62
#Define ARCHIVE_IP 172.31.20.131
#Define ARCHIVE_IP 172.31.47.208
#Define ARCHIVE_IP 172.31.41.14
#Define ARCHIVE_IP 172.31.34.59
#Define ARCHIVE_IP 172.31.46.41
#Define ARCHIVE_IP 172.31.44.232
Define ARCHIVE_IP 172.31.46.28

<Macro ArchiveRewrite>
	Use Rewrite ${ARCHIVE_IP} 8888
</Macro>

<Macro Headers>
        SetEnvIf Request_Method POST REQUEST_IS_POST=1
        SetEnvIf Request_URI ^/gateway.* REQUEST_IS_POST=1
        SetEnvIf Request_URI ^/gwt/RegattaOverview.* REQUEST_IS_POST=1
        SetEnvIf Request_URI ^/?$ REQUEST_IS_POST=1

        Header set Expires "Sun, 19 Nov 1978 05:00:00 GMT" env=REQUEST_IS_POST
        Header set Cache-Control no-cache,no-store,must-revalidate,post-check=0,pre-check=0 env=REQUEST_IS_POST

	AddOutputFilterByType DEFLATE text/plain
	AddOutputFilterByType DEFLATE text/html
	AddOutputFilterByType DEFLATE text/xml
	AddOutputFilterByType DEFLATE text/json
	AddOutputFilterByType DEFLATE application/json
	AddOutputFilterByType DEFLATE text/css
	AddOutputFilterByType DEFLATE image/gif
	AddOutputFilterByType DEFLATE image/png
	AddOutputFilterByType DEFLATE image/jpeg
	AddOutputFilterByType DEFLATE application/xml
	AddOutputFilterByType DEFLATE application/xhtml+xml
	AddOutputFilterByType DEFLATE application/rss+xml
	AddOutputFilterByType DEFLATE application/javascript
	AddOutputFilterByType DEFLATE application/x-javascript

	AllowEncodedSlashes NoDecode
</Macro>

<Macro Headers-Tennis>
	AllowEncodedSlashes On

        SetEnvIf Request_Method POST REQUEST_IS_POST=1
        SetEnvIf Request_URI ^/?$ REQUEST_IS_POST=1

        Header set Expires "Sun, 19 Nov 1978 05:00:00 GMT" env=REQUEST_IS_POST
        Header set Cache-Control no-cache,no-store,must-revalidate,post-check=0,pre-check=0 env=REQUEST_IS_POST

	<IfModule mod_mime.c>
		AddType text/css .css
		AddType application/x-javascript .js
		AddType text/x-component .htc
		AddType text/html .html .htm
		AddType text/richtext .rtf .rtx
		AddType image/svg+xml .svg .svgz
		AddType text/plain .txt
		AddType text/xsd .xsd
		AddType text/xsl .xsl
		AddType text/xml .xml
		AddType video/asf .asf .asx .wax .wmv .wmx
		AddType video/avi .avi
		AddType image/bmp .bmp
		AddType application/java .class
		AddType video/divx .divx
		AddType application/msword .doc .docx
		AddType application/vnd.ms-fontobject .eot
		AddType application/x-msdownload .exe
		AddType image/gif .gif
		AddType application/x-gzip .gz .gzip
		AddType image/x-icon .ico
		AddType image/jpeg .jpg .jpeg .jpe
		AddType application/vnd.ms-access .mdb
		AddType audio/midi .mid .midi
		AddType video/quicktime .mov .qt
		AddType audio/mpeg .mp3 .m4a
		AddType video/mp4 .mp4 .m4v
		AddType video/mpeg .mpeg .mpg .mpe
		AddType application/vnd.ms-project .mpp
		AddType application/x-font-otf .otf
		AddType application/vnd.oasis.opendocument.database .odb
		AddType application/vnd.oasis.opendocument.chart .odc
		AddType application/vnd.oasis.opendocument.formula .odf
		AddType application/vnd.oasis.opendocument.graphics .odg
		AddType application/vnd.oasis.opendocument.presentation .odp
		AddType application/vnd.oasis.opendocument.spreadsheet .ods
		AddType application/vnd.oasis.opendocument.text .odt
		AddType audio/ogg .ogg
		AddType application/pdf .pdf
		AddType image/png .png
		AddType application/vnd.ms-powerpoint .pot .pps .ppt .pptx
		AddType audio/x-realaudio .ra .ram
		AddType application/x-shockwave-flash .swf
		AddType application/x-tar .tar
		AddType image/tiff .tif .tiff
		AddType application/x-font-ttf .ttf .ttc
		AddType audio/wav .wav
		AddType audio/wma .wma
		AddType application/vnd.ms-write .wri
		AddType application/vnd.ms-excel .xla .xls .xlsx .xlt .xlw
		AddType application/zip .zip
	</IfModule>

	<IfModule mod_deflate.c>
		# Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
		<IfModule mod_setenvif.c>
			<IfModule mod_headers.c>
				SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
				RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
			</IfModule>
		</IfModule>

		<IfModule filter_module>
			# HTML, TXT, CSS, JavaScript, JSON, XML, HTC:
			FilterDeclare   COMPRESS
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$text/html'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$text/css'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$text/plain'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$text/xml'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$text/x-component'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/javascript'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/json'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/xml'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/xhtml+xml'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/rss+xml'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/atom+xml'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/vnd.ms-fontobject'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$image/svg+xml'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$image/x-icon'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$image/gif'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$image/jpeg'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$image/png'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$application/x-font-ttf'"
			FilterProvider  COMPRESS  DEFLATE "%{Content_Type} = '$font/opentype'"
			FilterChain     COMPRESS
			FilterProtocol  COMPRESS  DEFLATE change=yes;byteranges=no
		</IfModule>

		<IfModule !mod_filter.c>
			# Legacy versions of Apache
			AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
			AddOutputFilterByType DEFLATE application/javascript
			AddOutputFilterByType DEFLATE text/xml application/xml text/x-component
			AddOutputFilterByType DEFLATE application/xhtml+xml application/rss+xml application/atom+xml
			AddOutputFilterByType DEFLATE image/x-icon image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype
		</IfModule>
	</IfModule>
</Macro>

<Macro Rewrite $IP $PORT>
	ProxyPass "/" "http://$IP:$PORT/" nocanon
        # This is what it was before, requiring AllowEncodedSlashes On instead of NoDecode:
	# RewriteRule ^/(.*)$ http://$IP:$PORT/$1 [P,L]
        ProxyPassReverse / http://$IP:$PORT/
	ProxyPreserveHost On
</Macro>

<Macro SSL>
        SSLEngine  On
        SSLCertificateFile  /etc/pki/tls/certs/star_sapsailing_com.crt
        SSLCertificateKeyFile  /etc/pki/tls/private/star_sapsailing_com.key        
	SSLCertificateChainFile  /etc/pki/tls/certs/server-chain.crt
</Macro>

<Macro SSL-sail-insight>
        SSLEngine  On
        SSLCertificateFile /etc/letsencrypt/live/sail-insight.com/cert.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/sail-insight.com/privkey.pem
	SSLCertificateChainFile /etc/letsencrypt/live/sail-insight.com/fullchain.pem
</Macro>

<Macro SSL-Tennis>
        SSLEngine  On
        SSLCertificateFile  /etc/pki/tls/certs/star_saptennis_com.crt
        SSLCertificateKeyFile  /etc/pki/tls/private/star_saptennis_com_2022.key
	SSLCertificateChainFile  /etc/pki/tls/certs/saptennis_chain_2022.crt
</Macro>

<Macro Status $HOSTNAME $PATH>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        <Location /$PATH>
            SetHandler server-status
            Order deny,allow
            Allow from all
        </Location>
        CustomLog logs/services_log combined
    </VirtualHost>
</Macro>

<Macro Status-SSL $HOSTNAME $PATH>
    <VirtualHost *:443>
        ServerName $HOSTNAME
	Use SSL
        <Location /$PATH>
            SetHandler server-status
            Order deny,allow
            Allow from all
        </Location>
        CustomLog logs/services_log combined
    </VirtualHost>
</Macro>

<Macro Home-ARCHIVE $HOSTNAME>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Home-ARCHIVE-SSL-Redirect $HOSTNAME>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Home-ARCHIVE-SSL $HOSTNAME
</Macro>

<Macro Tennis-With-SSL $HOSTNAME $IP $PORT $PATH>
    <VirtualHost *:443>
        ServerName $HOSTNAME
	Use Headers-Tennis
        Use SSL-Tennis
        RewriteEngine on
	RewriteRule ^(/)?$ https://$HOSTNAME/$PATH [L,NE]
	RewriteRule ^/(.*)$ http://$IP:$PORT/$1 [P,L]
        ProxyPassReverse / http://$IP:$PORT/
	ProxyPreserveHost On
        CustomLog logs/tennis_log combined
    </VirtualHost>
</Macro>

<Macro Tennis-With-SSL-Plain $HOSTNAME $IP $PORT>
    <VirtualHost *:443>
        ServerName $HOSTNAME
	Use Headers-Tennis
        Use SSL-Tennis
        RewriteEngine on
	RewriteRule ^/(.*)$ http://$IP:$PORT/$1 [P,L]
        ProxyPassReverse / http://$IP:$PORT/
	ProxyPreserveHost On
        CustomLog logs/tennis_log combined
    </VirtualHost>
</Macro>

<Macro Home-ARCHIVE-SSL $HOSTNAME>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers
        RewriteEngine on
#        LogLevel alert rewrite:trace5
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Home $HOSTNAME $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers
        RewriteEngine on
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Home.html" [L,NE]
	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Home-SSL-Redirect $HOSTNAME $IP $PORT>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Home-SSL $HOSTNAME $IP $PORT
</Macro>

<Macro Tennis-SSL-Redirect $HOSTNAME>
    Use RedirectPermanentToSSL $HOSTNAME
</Macro>

<Macro Tennis-SSL-Redirect-WWW $HOSTNAME>
    <VirtualHost *:80>
	ServerName $HOSTNAME
	RedirectPermanent / https://www.$HOSTNAME/
        CustomLog logs/tennis_log combined
    </VirtualHost>
</Macro>

<Macro Home-SSL $HOSTNAME $IP $PORT>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers
        RewriteEngine on
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html" [L,NE]
	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Plain $HOSTNAME $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Tennis-Plain $HOSTNAME $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
	Use Rewrite $IP $PORT
        CustomLog logs/tennis_log combined
    </VirtualHost>
</Macro>

<Macro RedirectPermanentToSSL $HOSTNAME>
    <VirtualHost *:80>
	ServerName $HOSTNAME
	RedirectPermanent / https://$HOSTNAME/
    </VirtualHost>
</Macro>

<Macro Plain-SSL-Redirect $HOSTNAME $IP $PORT>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Plain-SSL $HOSTNAME $IP $PORT
</Macro>

<Macro Plain-SSL $HOSTNAME $IP $PORT>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers
        RewriteEngine on
	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro HardRedirect $HOSTNAME $TARGETURL>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
	RedirectMatch /(.*)$ $TARGETURL/
    </VirtualHost>
</Macro>

<Macro LiveCenterWithLanguageSubstitution-ARCHIVE $HOSTNAME $EVENTUUID>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html?locale=de#/event/:eventId=$EVENTUUID" [L,NE]
        RewriteCond %{REQUEST_URI} "^/en$"
        RewriteRule ^(/en)?$ "https://$HOSTNAME/gwt/Home.html?locale=en#/event/:eventId=$EVENTUUID" [L,NE]
        Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro LiveCenterWithLanguageSubstitution $HOSTNAME $EVENTUUID $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Home.html?locale=de#/event/:eventId=$EVENTUUID" [L,NE]
        RewriteCond %{REQUEST_URI} "^/en$"
        RewriteRule ^(/en)?$ "http://$HOSTNAME/gwt/Home.html?locale=en#/event/:eventId=$EVENTUUID" [L,NE]
        Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro RibDashboard $HOSTNAME $LEADERBOARD_NAME $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/dashboards/RibDashboard.html?leaderboardName=$LEADERBOARD_NAME&%1" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>


<Macro RegattaOverview-WithLeaderboard-WithLanguage $HOSTNAME $EVENTUUID $LANG $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/RegattaOverview.html?event=$EVENTUUID&locale=$LANG&enableLeaderboard=true" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro RegattaOverview-WithLanguage $HOSTNAME $EVENTUUID $LANG $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/RegattaOverview.html?event=$EVENTUUID&locale=$LANG" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro RegattaOverview-WithLeaderboard $HOSTNAME $EVENTUUID $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/RegattaOverview.html?event=$EVENTUUID&enableLeaderboard=true" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Event $HOSTNAME $EVENTUUID $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Home.html?%1#/event/:eventId=$EVENTUUID" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Event-SSL-Redirect $HOSTNAME $EVENTUUID $IP $PORT>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Event-SSL $HOSTNAME $EVENTUUID $IP $PORT
</Macro>

<Macro Event-SSL $HOSTNAME $EVENTUUID $IP $PORT>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html?%1#/event/:eventId=$EVENTUUID" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Series-SSL $HOSTNAME $SERIESUUID $IP $PORT>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html?%1#/series/events/:seriesId=$SERIESUUID" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Series-SSL-Redirect $HOSTNAME $EVENTUUID $IP $PORT>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Series-SSL $HOSTNAME $EVENTUUID $IP $PORT
</Macro>

<Macro Series $HOSTNAME $SERIESUUID $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Home.html?%1#/series/events/:seriesId=$SERIESUUID" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro EventRegattaIntro $HOSTNAME $EVENTUUID $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Home.html#/regatta/overview/:eventId=$EVENTUUID" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Event-WithLanguage $HOSTNAME $EVENTUUID $LANG $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Home.html?locale=$LANG#EventPlace:eventId=$EVENTUUID" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Series-ARCHIVE-SSL-Redirect $HOSTNAME $SERIESUUID>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Series-ARCHIVE-SSL $HOSTNAME $SERIESUUID
</Macro>

<Macro Series-ARCHIVE $HOSTNAME $SERIESUUID>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html?%1#/series/events/:leaderboardGroupId=$SERIESUUID" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Series-ARCHIVE-SSL $HOSTNAME $SERIESUUID>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html?%1#/series/events/:leaderboardGroupId=$SERIESUUID" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Event-ARCHIVE-SSL-Redirect $HOSTNAME $EVENTUUID>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Event-ARCHIVE-SSL $HOSTNAME $EVENTUUID
</Macro>

<Macro Event-ARCHIVE $HOSTNAME $EVENTUUID>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html#/event/:eventId=$EVENTUUID" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Event-ARCHIVE-SSL $HOSTNAME $EVENTUUID>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Home.html?%1#/event/:eventId=$EVENTUUID" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro RegattaOverview $HOSTNAME $EVENTUUID $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
	# The following matches the query string and captures it in group %1 for the RewriteRule to use before the fragment
	RewriteCond %{QUERY_STRING} "^(.*)$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/RegattaOverview.html?event=$EVENTUUID&%1" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Events $HOSTNAME $EVENTNAME $EXTRA $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/events/$EVENTNAME/$EXTRA" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Spectator-WithParam $HOSTNAME $GROUPNAME $EXTRA $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&$EXTRA" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Spectator-WithLanguage $HOSTNAME $GROUPNAME $LANG $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&showRaceDetails=true&locale=$LANG" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Spectator $HOSTNAME $GROUPNAME $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&showRaceDetails=true" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Leaderboard $HOSTNAME $GROUPNAME $NAME $IP $PORT>
    <VirtualHost *:80>
        ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Leaderboard.html?name=$NAME&leaderboardGroupName=$GROUPNAME&showRaceDetails=true&root=leaderboardGroupPanel" [L,NE]

	Use Rewrite $IP $PORT
    </VirtualHost>
</Macro>

<Macro Leaderboard-WithParam $HOSTNAME $GROUPNAME $NAME $EXTRA>
    <VirtualHost *:80>
       ServerName $HOSTNAME
        
	Use Headers

        RewriteEngine on

        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Leaderboard.html?name=$NAME&leaderboardGroupName=$GROUPNAME&$EXTRA" [L,NE]

	Use Rewrite-ARCHIVE1
    </VirtualHost>
</Macro>

<Macro Spectator-ARCHIVE $HOSTNAME $GROUPNAME>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&showRaceDetails=true" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Spectator-ARCHIVE-SSL-Redirect $HOSTNAME $GROUPNAME>
    Use RedirectPermanentToSSL $HOSTNAME
    Use Spectator-ARCHIVE-SSL $HOSTNAME "$GROUPNAME"
</Macro>

<Macro Spectator-ARCHIVE-SSL $HOSTNAME $GROUPNAME>
    <VirtualHost *:443>
        ServerName $HOSTNAME
        Use SSL
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&showRaceDetails=true" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Spectator-ARCHIVE-WithParam $HOSTNAME $GROUPNAME $EXTRA>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&$EXTRA" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Events-ARCHIVE $HOSTNAME $EVENTNAME $EXTRA>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "https://$HOSTNAME/events/$EVENTNAME/$EXTRA" [L,NE]
	Use ArchiveRewrite
    </VirtualHost>
</Macro>

<Macro Spectator-DEV $HOSTNAME $GROUPNAME>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&showRaceDetails=true" [L,NE]
	Use Rewrite 172.31.18.218 8888
    </VirtualHost>
</Macro>

<Macro Spectator-DEV-WithParam $HOSTNAME $GROUPNAME $EXTRA>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/gwt/Spectator.html?leaderboardGroupName=$GROUPNAME&$EXTRA" [L,NE]
	Use Rewrite 172.31.18.218 8888
    </VirtualHost>
</Macro>

<Macro Events-DEV $HOSTNAME $EVENTNAME $EXTRA>
    <VirtualHost *:80>
        ServerName $HOSTNAME
	Use Headers
        RewriteEngine on
        RewriteCond %{REQUEST_URI} "^(/)?$"
        RewriteRule ^(/)?$ "http://$HOSTNAME/events/$EVENTNAME/$EXTRA" [L,NE]
	Use Rewrite 172.31.18.218 8888
    </VirtualHost>
</Macro>
