jacoco {
    toolVersion = "$versions.jacoco"
}

def fileFilter = ['**/R.class',
                  '**/R$*.class',
                  '**/BuildConfig.*',
                  '**/Manifest*.*',
                  '**/*Test*.*',
                  'android/**/*.*',
                  '**/data/models/*']
def kotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
def mainSrc = "${project.projectDir}/src/main/java"

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories.from = files([kotlinTree])
    sourceDirectories.setFrom(files([mainSrc]))
    executionData.setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))
}

task jacocoTestCoverageVerification(type: JacocoCoverageVerification, dependsOn: 'jacocoTestReport') {
    classDirectories.from = files([kotlinTree])
    sourceDirectories.setFrom(files([mainSrc]))
    executionData.setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))

    violationRules {
        failOnViolation = false // set to true
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}