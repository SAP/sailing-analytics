Axel
====

- Axel liefert stabiles (zumindest im Bezug auf druckbetankte Daten) start und finish basierend auf MarkPassings + threshold (30)

 - when a race for an event arrives with a different boat class, open up a new Event

 - Pass final production instance URL information to BeTomorrow for wind integration

 - Consider making averaging intervals configurable

 - consolidate time point defaulting for servlet REST APIs

 - Test fail-over in case one of the two Java VM fails

 - enable switching between our and TracTrac-provided leaderboard information

 - implement missing pieces of TracTrac Result API-based TrackedLegOfCompetitor

 - Now that we can update Course's waypoints, consider creating a RaceDefinition right upon
   receiving the Event/Race from TracTrac, using an empty list of waypoints. This may simplify
   the entire life cycle of RaceDefinition objects.

 - Improve Mongo-based tests by using Mongo transactions instead of waiting for prior transactions to complete


Simon
=====

+ Wind expedition listener bei addrace automatisch konfigurieren
+ Wind tracking einschalten für prod für laufende Rennen
+ Einstellbar: Threads sofort starten (Wunsch: Checked=True)
+ Sortierung prüfen lokal und dann DEV (gelb) 

+ Leaderboard umbauen auf Timeslider support (dazu liefert Axel stabiles start und finsh)

+ Total Points einbauen

+ Animation Mode (3 sekunden, ...)

+ Wind sofort anzeigen

+ Current Race speichern damit iPhone das nutzen kann
+ iPhone UI implementieren
