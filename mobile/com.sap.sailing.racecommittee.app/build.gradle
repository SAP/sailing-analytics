apply plugin: "com.android.application"
apply plugin: 'com.getkeepsafe.dexcount'
apply from: "../git.gradle"

def packageName="com.sap.sailing.racecommittee.app"
def verCode=7

android {
    buildToolsVersion rootProject.ext.buildTools
    compileSdkVersion rootProject.ext.compileSdk

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    defaultConfig {
        applicationId packageName
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode verCode
        versionName "$verCode - Laser"
    }

    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ["src"]
            res.srcDirs = ["res"]
            assets.srcDirs = ["assets", "assets_gen"]
        }

        androidTest {
            java.srcDirs = ["tests-ui/src"]
            res.srcDirs = ["tests-ui/res"]
            assets.srcDirs = ["tests-ui/assets"]
        }

        test {
            java.srcDirs = ["tests-jvm/src"]
        }
    }

    signingConfigs {
        stg_debug {
            keyAlias "stg_debug"
            keyPassword "stg_debug"
            storeFile file("../android-keystore/STG-debug.jks")
            storePassword "stg_debug"
        }
    }

    buildTypes {
        debug {
            versionNameSuffix ".debug"
            signingConfig signingConfigs.stg_debug

            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-project.txt", "../proguard-mobile.txt"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-project.txt", "../proguard-mobile.txt"
        }
    }

    packagingOptions {
        exclude "LICENSE.txt"
        exclude ".readme"
        exclude "pom.properties"
        exclude "pom.xml"
    }
}

dependencies {
    api "com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.7.4"

    /* support libraries */
    api "com.android.support:appcompat-v7:${rootProject.ext.support}"
    api "com.android.support:recyclerview-v7:${rootProject.ext.support}"
    api "com.android.support:support-v13:${rootProject.ext.support}"

    /* Google Play Services */
    implementation "com.google.android.gms:play-services-location:${rootProject.ext.play_services}"
    api "com.google.android.gms:play-services-maps:${rootProject.ext.play_services}"

    /* license dialog */
    api "de.psdev.licensesdialog:licensesdialog:${rootProject.ext.license_dialog}"

    /* local dependencies */
    api project(":mobile:com.sap.sailing.android.shared")
    api project(":java:com.sap.sse.common")

    /* all local jar-libs */
    api fileTree(dir: "libs", include: ["*.jar"])

    /* JVM tests */
    testImplementation "junit:junit:${rootProject.ext.junit}"
    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockito}"
}

// Custom tasks

/**
 * Deletes apk and version from www apps directory
 */
clean.doLast {
    ant.delete() {
        fileset(dir: file("../../java/com.sap.sailing.www/apps"), includes: "$packageName*")
    }
}

/**
 * Copies apk into www apps directory and create version file
 */
build.doLast {
    // Copy APK file
    copy {
        from ("build/outputs/apk") {
            include "**/*debug.apk"
        }
        into "../../java/com.sap.sailing.www/apps"
        rename { String fileName -> fileName.replace("-debug", "") }
    }

    // Create version file
    def versionFile = file("../../java/com.sap.sailing.www/apps/$packageName." + "version")
    versionFile.text = "$packageName" + ".apk=$verCode"
}
