[main]
invalidRequest = org.apache.shiro.web.filter.InvalidRequestFilter
invalidRequest.blockBackslash = false
invalidRequest.blockSemicolon = false
invalidRequest.blockNonAscii = false
credentialsMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1024

# Realm configuration:
# --------------------

upRealm = com.sap.sse.security.UsernamePasswordRealm
upRealm.credentialsMatcher = $credentialsMatcher
oauthRealm = com.sap.sse.security.OAuthRealm
bearerTokenRealm = com.sap.sse.security.BearerTokenRealm

# Putting it all together:
sessionManager = com.sap.sse.security.SecurityWebSessionManager
securityManager.sessionManager = $sessionManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO
subjectDAO = com.sap.sse.security.NoSessionStorageSessionDAO
securityManager.subjectDAO = $subjectDAO
# 1y timeout
securityManager.sessionManager.globalSessionTimeout = 31536000000
cacheManager = com.sap.sse.security.SessionCacheManager
securityManager.cacheManager = $cacheManager
authenticationStrategy = com.sap.sse.security.AtLeastOneSuccessfulStrategyWithTimedLocks
securityManager.authenticator.authenticationStrategy = $authenticationStrategy

# Support for anonymous user permissions
webSubjectFactoryWithAnonymousPrincipalSupport=com.sap.sse.security.WebSubjectFactoryWithAnonymousPrincipalSupport
securityManager.subjectFactory=$webSubjectFactoryWithAnonymousPrincipalSupport

# Authentication Filter Configurations
# ------------------------------------

# A filter that requires the user to have at least one of the roles specified as
# filter parameter. This makes it different from the default roles[...] filter
# which requires the user to have ALL of the roles specified as parameters.
anyofroles = com.sap.sse.security.AnyOfRolesFilter

# This authentication filter accepts a bearer access token in the HTTP
# Authorization header field, as in
#   Authorization: Bearer 1029741026501365024376093245
# If no such bearer token is provided, the filter falls back to basic HTTP
# authentication ("Authentication: Basic ...") and then regular form-based
# authentication with POST parameters "username" and "password".
bearerToken = com.sap.sailing.shared.server.security.BearerTokenOrBasicOrFormAuthenticationFilterSAPSailing

# The same as bearerToken, but with additional fallback to anonymous authentication.
# In this case sufficient permission checks have to be done on the application side.
bearerTokenOrAnonymous = com.sap.sailing.shared.server.security.BearerTokenOrBasicOrFormOrAnonymousAuthenticationFilterSAPSailing

# Specifying filter chains for URL patterns

[urls]
# Since depending on the permissions set, even an anonymous user can do everything or nothing, it might be valid for every call
/api/v1/** = bearerTokenOrAnonymous
