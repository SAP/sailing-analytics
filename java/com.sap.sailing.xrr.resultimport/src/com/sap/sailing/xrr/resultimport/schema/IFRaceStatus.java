//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.03.14 at 03:41:40 PM CET 
//


package com.sap.sailing.xrr.resultimport.schema;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IFRaceStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IFRaceStatus">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="planned"/>
 *     &lt;enumeration value="scheduled"/>
 *     &lt;enumeration value="startseq"/>
 *     &lt;enumeration value="inprogress"/>
 *     &lt;enumeration value="recall"/>
 *     &lt;enumeration value="finished"/>
 *     &lt;enumeration value="final"/>
 *     &lt;enumeration value="result"/>
 *     &lt;enumeration value="delayed"/>
 *     &lt;enumeration value="cancelled"/>
 *     &lt;enumeration value="protested"/>
 *     &lt;enumeration value="postponed"/>
 *     &lt;enumeration value="abandoned"/>
 *     &lt;enumeration value="rescheduled"/>
 *     &lt;enumeration value="provisional"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IFRaceStatus")
@XmlEnum
public enum IFRaceStatus {


    /**
     * planned
     * 
     */
    @XmlEnumValue("planned")
    PLANNED("planned"),

    /**
     * scheduled
     * 
     */
    @XmlEnumValue("scheduled")
    SCHEDULED("scheduled"),

    /**
     * startseq
     * 
     */
    @XmlEnumValue("startseq")
    STARTSEQ("startseq"),

    /**
     * inprogress
     * 
     */
    @XmlEnumValue("inprogress")
    INPROGRESS("inprogress"),

    /**
     * recall
     * 
     */
    @XmlEnumValue("recall")
    RECALL("recall"),

    /**
     * finished
     * 
     */
    @XmlEnumValue("finished")
    FINISHED("finished"),

    /**
     * final
     * 
     */
    @XmlEnumValue("final")
    FINAL("final"),

    /**
     * result
     * 
     */
    @XmlEnumValue("result")
    RESULT("result"),

    /**
     * delayed
     * 
     */
    @XmlEnumValue("delayed")
    DELAYED("delayed"),

    /**
     * cancelled
     * 
     */
    @XmlEnumValue("cancelled")
    CANCELLED("cancelled"),

    /**
     * protested
     * 
     */
    @XmlEnumValue("protested")
    PROTESTED("protested"),

    /**
     * postponed
     * 
     */
    @XmlEnumValue("postponed")
    POSTPONED("postponed"),

    /**
     * abandoned
     * 
     */
    @XmlEnumValue("abandoned")
    ABANDONED("abandoned"),

    /**
     * rescheduled
     * 
     */
    @XmlEnumValue("rescheduled")
    RESCHEDULED("rescheduled"),

    /**
     * provisional
     * 
     */
    @XmlEnumValue("provisional")
    PROVISIONAL("provisional");
    private final String value;

    IFRaceStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IFRaceStatus fromValue(String v) {
        for (IFRaceStatus c: IFRaceStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
