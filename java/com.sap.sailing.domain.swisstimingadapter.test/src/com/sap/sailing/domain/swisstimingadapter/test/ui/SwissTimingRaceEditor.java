/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RaceEditor.java
 *
 * Created on 15.11.2011, 14:14:41
 */
package com.sap.sailing.domain.swisstimingadapter.test.ui;

import com.sap.sailing.domain.swisstimingadapter.classes.messages.ABSMessage;
import com.sap.sailing.domain.swisstimingadapter.classes.messages.RACMessage;
import com.sap.sailing.domain.swisstimingadapter.classes.messages.RPDMessage;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractListModel;

/**
 *
 * @author D056866
 */
public class SwissTimingRaceEditor extends javax.swing.JFrame {
    private List<Object> commands;

    /** Creates new form RaceEditor */
    public SwissTimingRaceEditor() {
        initComponents();
        jCommandList.setModel(new AbstractListModel() {
            private ArrayList<Object> commands = new ArrayList<Object>();

            @Override
            public int getSize() {
                return commands.size();
            }

            @Override
            public Object getElementAt(int index) {
                return commands.get(index);
            }
        });
        commands = new ArrayList<Object>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jCommandList = new javax.swing.JList();
        jAdd = new javax.swing.JButton();
        jRemove = new javax.swing.JButton();
        jEdit = new javax.swing.JButton();
        jMoveUp = new javax.swing.JButton();
        jMoveDown = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCommandList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jCommandList);

        jAdd.setText("Add");
        jAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddActionPerformed(evt);
            }
        });

        jRemove.setText("Remove");

        jEdit.setText("Edit");
        jEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditActionPerformed(evt);
            }
        });

        jMoveUp.setText("Up");

        jMoveDown.setText("Down");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jMoveDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jMoveUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMoveUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMoveDown)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddActionPerformed
        // TODO Create Dialog
        CommandChoice cc = new CommandChoice(this, true);
        cc.setVisible(true);
        switch(cc.getUserChoice()){
            case CommandChoice.RAC:
                EditRAC jRac = new EditRAC(this, true, null);
                jRac.setVisible(true);
                commands.add(jRac.getRACMessage());
                break;
            case CommandChoice.ABS:
                EditABS jAbs = new EditABS(this, true, null);
                jAbs.setVisible(true);
                commands.add(jAbs.getMessage());
                break;
            case CommandChoice.RPD:
                EditRPD jRpd = new EditRPD(this, true, null);
                jRpd.setVisible(true);
                commands.add(jRpd.getMessage());
                break;
        }
        jCommandList.setListData(getArrayOfList(commands));
    }//GEN-LAST:event_jAddActionPerformed

    private void jEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditActionPerformed
        // TODO add your handling code here:
        Object o = jCommandList.getSelectedValue();
        if (o != null){
            o = commands.get(commands.indexOf(o));
            if (o instanceof RACMessage){
                EditRAC jRac = new EditRAC(this, true, (RACMessage) o);
                jRac.setVisible(true);
            }
            else if (o instanceof ABSMessage){
                EditABS jAbs = new EditABS(this, true, (ABSMessage) o);
                jAbs.setVisible(true);
            }
            else if (o instanceof RPDMessage){
                EditRPD jRpd = new EditRPD(this, true, (RPDMessage) o);
                jRpd.setVisible(true);
            }
            jCommandList.setListData(getArrayOfList(commands));
        }
    }//GEN-LAST:event_jEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwissTimingRaceEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwissTimingRaceEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwissTimingRaceEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwissTimingRaceEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SwissTimingRaceEditor().setVisible(true);
            }
        });
    }
    
    private Object[] getArrayOfList(List<Object> al){
        Object[] obj = new Object[al.size()];
        for (int i = 0; i < obj.length; i++)
            obj[i] = al.get(i);
        return obj;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAdd;
    private javax.swing.JList jCommandList;
    private javax.swing.JButton jEdit;
    private javax.swing.JButton jMoveDown;
    private javax.swing.JButton jMoveUp;
    private javax.swing.JButton jRemove;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
