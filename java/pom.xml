<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>workspace</artifactId>
    <groupId>com.sap.sailing</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>root</artifactId>
  <packaging>pom</packaging>

  <modules>
    <!-- By default, only the modules are added that are always needed.
         These are the module that are needed for both backend and Android builds.
         To add additional modules for the backend build, there is a specific profile. -->
    <module>com.sap.sse.common</module>
    <module>com.sap.sse.shared.android</module>
    <module>com.sap.sse.datamining.annotations</module>
    <module>com.sap.sse.security.common</module>
    <module>org.json.simple</module>
    <module>com.sap.sailing.domain.common</module>
    <module>com.sap.sailing.domain.shared.android</module>
    <module>com.sap.sailing.server.gateway.serialization.shared.android</module>
  </modules>

  <properties>
    <!-- Please ensure that serialization/replication works correctly, when updating the tycho version.
         Due to ECJ/JDT bugs it may fail depending on the Eclipse version tycho is based on 
         (see Bugzilla: https://bugzilla.sapsailing.com/bugzilla/show_bug.cgi?id=3859). -->
    <!-- Most likely, serialization/replication will fail with tycho versions based on Eclipse Neon R (4.6.0). -->
    <tycho-version>1.0.0</tycho-version>
    <gwt.version>2.8.2</gwt.version>
    <!-- gwt-maven-plugin is typically in sync with the GWT version. But sometimes versions need extra time after a new GWT release. -->
    <gwt.plugin.version>2.8.2</gwt.plugin.version>
    <gwt.minVersion>2.8.0</gwt.minVersion>
    <gwt.workers>2</gwt.workers>
    <p2-target>race-analysis-p2-remote</p2-target><!--can be overidden through p2-target.local profile -->
    <!-- QUESTION: Which properties or settings are system dependent and differ across different machines/environments? QUESTION:
    Can we move the system property -Dmongo.dbName to "parameters.mongodb"? If so the IP of the host would be the same for all
    profiles. -->
    <parameters.common>
      -Dfile.encoding=cp1252 -Dmongo.dbName=winddbTest -DspatialWind=true
    </parameters.common>
    <parameters.vm-settings>
      -ea -Xmx1024m -XX:+UseG1GC
    </parameters.vm-settings>
    <parameters.tractrac>
      -Dtractrac.tunnel=true -Dtractrac.tunnel.host=localhost
    </parameters.tractrac>
    <parameters.mongodb>
      -Dmongo.host=127.0.0.1
    </parameters.mongodb>
    <parameters.debug>
      -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y
    </parameters.debug>
    <!-- "Forward declaration" for better readability. The actual value should be defined in the local settings.xml, because
    of the differences between the CI-Build and the local setup. -->
    <parameters.proxy>
      -Dhttp.proxyHost=proxy.wdf.sap.corp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.wdf.sap.corp -Dhttps.proxyPort=8080
    </parameters.proxy>
    <reportsdirectory>${project.build.directory}/surefire-reports</reportsdirectory>
    <skipTests>false</skipTests>
  </properties>

  <profiles>
    <profile>
      <!-- This profile activates some configuration (submodules and Tycho) that must not be active when building the Android apps.
           On Lean DI this profile is inactive.
           In a non Lean DI environment this is active by default and can be deactivated using the parameter "-P !with-not-android-relevant". -->
      <id>with-not-android-relevant</id>
      <activation>
        <property>
          <name>!ldi.releaseBuild</name>
        </property>
      </activation>
      <modules>
        <module>com.sap.sse</module>
        <module>com.sap.sse.test</module>
        <module>com.sap.sse.jersey.jaxbdependencyfragment</module>
        <module>com.sap.sse.mail</module>
        <module>com.sap.sse.mail.replication.test</module>
        <module>com.sap.sse.mail.replication.testsupport</module>
        <module>com.sap.sse.mongodb</module>
        <module>com.sap.sse.gwt</module>
        <module>com.sap.sse.gwt.adminconsole</module>
        <module>com.sap.sse.datamining</module>
        <module>com.sap.sse.datamining.shared</module>
		<module>com.sap.sse.datamining.ui</module>
        <module>com.sap.sse.security</module>
        <module>com.sap.sse.security.ui</module>
        <module>com.sap.sse.security.userstore.mongodb</module>
        <module>com.sap.sse.operationaltransformation</module>
        <module>com.sap.sse.replication</module>
        <module>com.sap.sse.threadmanager</module>
        <module>com.sap.sse.filestorage</module>
        <module>com.sap.sse.feature</module>
        <module>com.sap.sse.feature.runtime</module>
        <module>com.sap.sailing.competitorimport</module>
        <module>com.sap.sailing.domain</module>
        <module>com.sap.sailing.geocoding</module>
        <module>com.sap.sailing.datamining.provider</module>
        <module>com.sap.sailing.datamining</module>
        <module>com.sap.sailing.datamining.shared</module>
        <module>com.sap.sailing.domain.persistence</module>
        <module>com.sap.sailing.domain.deckmanadapter</module>
        <module>com.sap.sailing.domain.bravoadapter</module>
        <module>com.sap.sailing.domain.expeditionadapter</module>
        <module>com.sap.sailing.domain.tractracadapter</module>
        <module>com.sap.sailing.domain.tractracadapter.persistence</module>
        <module>com.sap.sailing.domain.windfinderadapter</module>
        <module>com.sap.sailing.domain.windfinderadapter.test</module>
        <module>com.sap.sailing.domain.igtimiadapter</module>
        <module>com.sap.sailing.domain.igtimiadapter.persistence</module>
        <module>com.sap.sailing.domain.racelogtrackingadapter</module>
        <module>com.sap.sailing.domain.racelogtrackingadapter.testsupport</module>
        <module>com.sap.sailing.domain.swisstimingadapter</module>
        <module>com.sap.sailing.domain.swisstimingadapter.persistence</module>
        <module>com.sap.sailing.domain.swisstimingreplayadapter</module>
        <module>com.sap.sailing.news</module>
        <module>com.sap.sailing.declination</module>
        <module>com.sap.sailing.udpconnector</module>
        <module>com.sap.sailing.expeditionconnector.common</module>
        <module>com.sap.sailing.expeditionconnector</module>
        <module>com.sap.sailing.expeditionconnector.persistence</module>
        <module>com.sap.sailing.server</module>
        <module>com.sap.sailing.server.gateway</module>
        <module>com.sap.sailing.server.gateway.serialization</module>
        <module>com.sap.sailing.www</module>
        <module>com.sap.sailing.xmlexport</module>
        <module>com.google.gwt.user</module>
        <module>com.google.gwt.dev</module>
        <module>com.google.gwt.servlet</module>
        <module>com.tractrac.clientmodule</module>
        <module>com.googlecode.java-diff-utils</module>
        <module>com.googlecode.mgwt</module>
	<module>net.sf.marineapi</module>
	<module>net.sf.marineapi.test</module>
        <module>com.sap.sailing.dashboards.gwt</module>
        <module>com.sap.sailing.feature</module>
        <module>org.moxieapps.gwt.highcharts</module>
        <module>com.google.gwt.ajaxloader</module>
        <module>com.github.branflake2267.gwt-maps-api</module>
        <module>com.sap.sailing.grib</module>
        <module>com.sap.sailing.grib.test</module>
        <module>com.sap.sailing.nmeaconnector</module>
        <module>com.sap.sailing.nmeaconnector.test</module>
        <module>com.sap.sailing.resultimport</module>
        <module>com.sap.sailing.kiworesultimport</module>
        <module>com.sap.sailing.ess40.resultimport</module>
        <module>com.sap.sailing.xrr.schema</module>
        <module>com.sap.sailing.xrr.resultimport</module>
        <module>com.sap.sailing.xrr.structureimport</module>
        <module>com.sap.sailing.freg.resultimport</module>
        <module>org.openqa.selenium.osgi</module>
        <module>com.sap.sailing.monitoring</module>
        <module>com.sap.sailing.simulator</module>
        <module>com.sap.sailing.server.trackfiles</module>
        <module>com.sap.sailing.feature.runtime</module>
        <module>com.sap.sailing.gwt.ui</module>
        <module>com.sap.sailing.domain.test</module>
        <module>com.sap.sse.replication.testsupport</module>
        <module>com.sap.sailing.server.testsupport</module>
        <!-- The following test fragment doesn't yet do what it should in the Maven context... -->
        <module>com.sap.sse.gwt.test</module>
        <!-- -->
        <module>com.sap.sse.datamining.test</module>
        <module>com.sap.sse.security.replication.test</module>
        <module>com.sap.sse.security.test</module>
        <module>com.sap.sse.operationaltransformation.test</module>
        <module>com.sap.sse.common.test</module>
        <module>com.sap.sse.shared.android.test</module>
        <module>com.sap.sse.filestorage.test</module>
        <module>com.sap.sailing.datamining.test</module>
        <module>com.sap.sailing.domain.deckmanadapter.test</module>
        <module>com.sap.sailing.domain.igtimiadapter.test</module>
        <module>com.sap.sailing.domain.racelogtrackingadapter.test</module>
        <module>com.sap.sailing.xmlexport.test</module>
        <module>com.sap.sailing.xrr.resultimport.test</module>
        <module>com.sap.sailing.domain.shared.android.test</module>
        <module>com.sap.sailing.geocoding.test</module>
        <module>com.sap.sailing.domain.swisstimingadapter.test</module>
        <module>com.sap.sailing.domain.swisstimingreplayadapter.test</module>
        <module>com.sap.sailing.declination.test</module>
        <module>com.sap.sailing.expeditionconnector.test</module>
        <module>com.sap.sailing.server.test</module>
        <module>com.sap.sailing.server.gateway.test</module>
        <module>com.sap.sailing.server.gateway.test.support</module>
        <module>com.sap.sailing.server.gateway.serialization.test</module>
        <module>com.sap.sailing.server.replication.test</module>
        <module>com.sap.sailing.gwt.ui.test</module>
        <module>com.sap.sailing.mongodb.test</module>
        <module>com.googlecode.java-diff-utils.test</module>
        <module>com.sap.sailing.kiworesultimport.test</module>
        <module>com.sap.sailing.ess40.resultimport.test</module>
        <module>com.sap.sailing.freg.resultimport.test</module>
        <module>com.sap.sailing.barbados.resultimport</module>
        <module>com.sap.sailing.barbados.resultimport.test</module>
        <module>com.sap.sailing.velum.resultimport</module>
        <module>com.sap.sailing.velum.resultimport.test</module>
        <module>com.sap.sailing.sailwave.resultimport</module>
        <module>com.sap.sailing.sailwave.resultimport.test</module>
        <module>com.sap.sailing.manage2sail</module>
        <module>com.sap.sailing.manage2sail.resultimport</module>
        <module>com.sap.sailing.manage2sail.resultimport.test</module>
        <module>com.sap.sailing.yachtscoring.resultimport</module>
        <module>com.sap.sailing.yachtscoring.resultimport.test</module>
        <module>com.sap.sailing.simulator.test</module>
        <module>com.sap.sailing.server.trackfiles.test</module>
        <module>com.sap.sailing.selenium.test</module>
        <module>com.sap.sailing.feature.p2build</module>
        <module>com.sap.sailing.polars</module>
        <module>com.sap.sailing.polars.datamining</module>
        <module>com.sap.sailing.polars.datamining.shared</module>
        <module>com.sap.sailing.polars.test</module>
		<module>org.mp4parser.isoparser</module>
        <!--
        com.sap.sailing.targetplatform.base
        left out on purpose: only invoke maven manually to build target platform
      -->
    </modules>
    <build>
      <plugins>
        <plugin>
          <groupId>org.eclipse.tycho</groupId>
          <artifactId>target-platform-configuration</artifactId>
          <configuration>
            <dependency-resolution>
              <extraRequirements>
                <requirement>
                  <type>eclipse-plugin</type>
                  <id>com.google.gwt.dev</id>
                  <versionRange>0.0.0</versionRange>
                </requirement>
              </extraRequirements>
            </dependency-resolution>
          </configuration>
        </plugin>
      </plugins>
    </build>
  </profile>
  <profile>
    <id>no-debug.with-proxy</id>
    <activation>
      <activeByDefault>true</activeByDefault>
    </activation>
    <properties>
      <tycho.build.argLine>
        ${parameters.common} ${parameters.vm-settings} ${parameters.proxy} ${parameters.tractrac} ${parameters.mongodb}
      </tycho.build.argLine>
    </properties>
  </profile>
  <profile>
    <id>no-debug.without-proxy</id>
    <properties>
      <tycho.build.argLine>
        ${parameters.common} ${parameters.vm-settings} ${parameters.mongodb}
      </tycho.build.argLine>
    </properties>
  </profile>
  <profile>
    <id>debug.with-proxy</id>
    <properties>
      <tycho.build.argLine>
        ${parameters.common} ${parameters.vm-settings} ${parameters.proxy} ${parameters.debug} ${parameters.mongodb}
      </tycho.build.argLine>
    </properties>
  </profile>
  <profile>
    <id>debug.without-proxy</id>
    <properties>
      <tycho.build.argLine>
        ${parameters.common} ${parameters.vm-settings} ${parameters.debug} ${parameters.mongodb}
      </tycho.build.argLine>
    </properties>
  </profile>
  <profile>
    <id>p2-target.local</id>
    <properties>
      <p2-target>
        race-analysis-p2-local
      </p2-target>
    </properties>
    <activation>
      <property>
        <name>p2-local</name><!-- activiated by ``mvn -Dp2-local`` -->
      </property>
    </activation>
  </profile>
  
  <profile>
    <id>leandi</id>
    <activation>
      <!-- Only active on Lean DI. -->
      <property>
        <name>ldi.releaseBuild</name>
      </property>
    </activation>
    <properties>
      <!-- On Lean DI we do not build any artifact that needs stuff from the target platform.
           To avoid problems during target platform resolution,
           we use an empty target platform file that simply doesn't reference any artifacts.
           The alternative would be to completely deactivate some Tycho configuration on Lean DI,
           but this would be much more complex and fragile. -->
      <p2-target>race-analysis-p2-empty</p2-target>
    </properties>
    <dependencies>
      <dependency>
        <!-- This dependency simply ensures, that the Android SDK installation is completed on Lean DI before anything else is being built. -->
        <groupId>com.sap.sailing</groupId>
        <artifactId>install-android-sdk</artifactId>
        <version>${project.version}</version>
        <scope>provided</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
    <build>
      <plugins>
        <plugin>
          <groupId>org.eclipse.tycho</groupId>
          <artifactId>tycho-compiler-plugin</artifactId>
          <configuration>
            <!-- Toolchan stuff doesn't work on Lean DI,
                 so we need to hard-code Java 1.7 (Android 5.1 SDK isn't compatible with Java 8)
                 compatibility for all builds. -->
            <source>1.7</source>
            <target>1.7</target>
          </configuration>
        </plugin>
      </plugins>
    </build>
  </profile>
  
  <profile>
    <id>non-leandi</id>
    <activation>
      <!-- Only active in non Lean DI environments. -->
      <property>
        <name>!ldi.releaseBuild</name>
      </property>
    </activation>
    <build>
      <plugins>
        <plugin>
          <!-- On Lean DI, the toolchains stuff isn't correctly configured, so this can only be used if it isn't a Lean DI build. -->
          <groupId>org.eclipse.tycho</groupId>
          <artifactId>tycho-compiler-plugin</artifactId>
          <configuration>
            <useJDK>BREE</useJDK>
          </configuration>
        </plugin>
      </plugins>
    </build>
  </profile>
</profiles>

<build>
  <directory>bin</directory>
  <outputDirectory>bin</outputDirectory>
  <testOutputDirectory>bin</testOutputDirectory>

  <pluginManagement>
    <plugins>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>eclipse-test-plugin</artifactId>
        <version>${tycho-version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <reportsDirectory>${reportsdirectory}</reportsDirectory>
        </configuration>
      </plugin>
      <plugin>
          <groupId>com.simpligility.maven.plugins</groupId>
          <artifactId>android-maven-plugin</artifactId>
          <configuration>
            <sourceDirectories>src</sourceDirectories>
            <destinationManifestFile>AndroidManifest.xml</destinationManifestFile>
            <classesJarExcludes>
              <classesJarExclude>*.jar</classesJarExclude>
              <classesJarExclude>generated-sources/**</classesJarExclude>
              <classesJarExclude>maven-archiver/**</classesJarExclude>
              <classesJarExclude>sourcebundle-l10n-gen/**</classesJarExclude>
              <classesJarExclude>p2*</classesJarExclude>
              <classesJarExclude>MANIFEST.MF</classesJarExclude>
              <classesJarExclude>*.ap_</classesJarExclude>
              <classesJarExclude>local-artifacts.properties</classesJarExclude>
              <classesJarExclude>**/*.gwt.xml</classesJarExclude>
            </classesJarExcludes>
          </configuration>
          <executions>
            <execution>
              <id>aar</id>
              <goals>
                <goal>aar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9.1</version>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>attach-artifact</goal>
                    </goals>
                    <configuration>
                        <artifacts>
                            <artifact>
                                <type>aar</type>
                                <file>${project.build.directory}/${project.build.finalName}.aar</file>
                            </artifact>
                        </artifacts>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
  </pluginManagement>

  <plugins>
    <plugin>
      <groupId>org.eclipse.tycho</groupId>
      <artifactId>tycho-maven-plugin</artifactId>
      <version>${tycho-version}</version>
      <extensions>true</extensions>
    </plugin>
    <plugin>
      <groupId>org.eclipse.tycho</groupId>
      <artifactId>target-platform-configuration</artifactId>
      <version>${tycho-version}</version>
      <configuration>
        <resolver>p2</resolver>
        <target>
          <artifact>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.artifactId}</artifactId>
            <version>${project.version}</version>
            <classifier>../com.sap.sailing.targetplatform/definitions/${p2-target}</classifier>
          </artifact>
        </target>
        <environments>
          <environment>
            <os>linux</os>
            <ws>gtk</ws>
            <arch>x86</arch>
          </environment>
          <environment>
            <os>linux</os>
            <ws>gtk</ws>
            <arch>x86_64</arch>
          </environment>
          <environment>
            <os>win32</os>
            <ws>win32</ws>
            <arch>x86</arch>
          </environment>
          <environment>
            <os>win32</os>
            <ws>win32</ws>
            <arch>x86_64</arch>
          </environment>
          <environment>
            <os>macosx</os>
            <ws>cocoa</ws>
            <arch>x86_64</arch>
          </environment>
        </environments>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.eclipse.tycho</groupId>
      <artifactId>tycho-surefire-plugin</artifactId>
      <version>${tycho-version}</version>
      <configuration>
        <argLine>${tycho.build.argLine}</argLine>
        <excludes>
          <!-- Exclude inner classes -->
          <exclude>**/*$*</exclude>
        </excludes>
        <reportsDirectory>${reportsdirectory}</reportsDirectory>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.eclipse.tycho</groupId>
      <artifactId>tycho-compiler-plugin</artifactId>
      <version>${tycho-version}</version>
    </plugin>


    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>gwt-maven-plugin</artifactId>
      <version>${gwt.plugin.version}</version>
      <executions>
        <!-- GWT version detected from dependencyManagement -->
        <execution>
          <configuration>
            <extraJvmArgs>-Dgwt.persistentunitcache=false -Xmx2560m -Djava.io.tmpdir=${env.TMP}</extraJvmArgs>
             <fragmentCount>4</fragmentCount>
            <!--
            <userAgents>chrome</userAgents>
          -->
          <!--
          <style>PRETTY</style>
        -->
        <localWorkers>${gwt.workers}</localWorkers>
        <!-- Uncomment the following to obtain details split-point reports
        <compileReport>true</compileReport>
        <detailedSoyc>true</detailedSoyc>
      -->
    </configuration>
  </execution>
</executions>
</plugin>

</plugins>

<extensions>
  <!-- Enabling the use of FTP -->
  <extension>
    <groupId>org.apache.maven.wagon</groupId>
    <artifactId>wagon-ssh-external</artifactId>
    <version>1.0-beta-6</version>
  </extension>
</extensions>

</build>

<reporting>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-report-plugin</artifactId>
      <version>2.16</version>
      <configuration>
        <aggregate>true</aggregate>
        <reportsDirectories>
          <reportsDirectory>${reportsdirectory}</reportsDirectory>
          <aggregate>true</aggregate>
        </reportsDirectories>
      </configuration>
    </plugin>
  </plugins>
</reporting>
</project>
