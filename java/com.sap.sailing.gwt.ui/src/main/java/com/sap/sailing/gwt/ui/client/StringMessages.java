package com.sap.sailing.gwt.ui.client;

import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.LocalizableResource.DefaultLocale;
import com.google.gwt.json.client.JSONValue;
import com.sap.sse.gwt.client.DefaultRule_0_1_2_n;
import com.sap.sse.gwt.client.DefaultRule_1_0n;

@DefaultLocale("en")
public interface StringMessages extends com.sap.sse.gwt.client.StringMessages, com.sap.sse.gwt.adminconsole.StringMessages {
    public static final StringMessages INSTANCE = GWT.create(StringMessages.class);
    
    String tracTracEvents();
    String swissTimingEvents();
    String trackedBefore();
    String general();
    String listRaces();
    String listRegattas();
    String wind();
    String windPanelLabel();
    String refresh();
    @Override
    String remove();
    String windSource();
    String dampeningInterval();
    String map();
    String race();
    String races();
    String tracked();
    String time();
    String playSpeed();
    String playSpeedHelp();
    String playModeLive();
    String playModeReplay();
    String timeDelay();
    String timeDelayHelp();
    String speedInKnots();
    String fromDeg();
    String noRacesYet();
    String total();
    String carry();
    String competitor();
    String competitors();
    String competitorsSelected(int selectedCompetitorsCount, int competitorsCount);
    String defaultLeaderboard();
    String noSuchLeaderboard();
    String leaderboardConfiguration();
    String newDotDotDot();
    String editScores();
    String columnNamesInSelectedLeaderboard();
    String addDotDotDot();
    String renameDotDotDot();
    String trackedRaceConnectedToSelectedRaceName();
    String linkToColumn();
    String unlink();
    String leaderboardName();
    @Override
    String cancel();
    String pleaseEnterAName();
    String pleaseEnterABoatClass();
    String discardRacesFromHowManyStartedRacesOn();
    String leaderboardWithThisNameAlreadyExists();
    String discardThresholdsMustBeNumeric();
    String discardThresholdsMustBeAscending();
    String discarding();
    String startingFromNumberOfRaces();
    String renameLeaderboard();
    String addColumnToLeaderboard();
    String pleaseEnterNameForNewRaceColumn();
    @Override
    String ok();
    String medalRace();
    String renameRace();
    String openSelectedLeaderboard();
    String rank();
    String totalRegattaRank();
    String collapse();
    String expand();
    String leg();
    String distanceInMeters();
    String averageSpeedInKnots();
    String rankGain();
    String sapSailingAnalytics();
    String leaderboard();
    String leaderboards();
    String leaderboardSettings();
    @Override
    String settings();
    String linkedRaces();
    String selectAtLeastOneLegDetail();
    String currentSpeedOverGroundInKnots();
    String estimatedTimeToNextWaypointInSeconds();
    String gapToLeaderInSeconds();
    String velocityMadeGoodInKnots();
    String windwardDistanceToGoInMeters();
    String windwardDistanceToCompetitorFarthestAheadInMeters();
    String name();
    String leaveEmptyForDefault();
    String trackNewEvent();
    String trackableRaces();
    String trackWind();
    String regattaName();
    String eventName();
    String event();
    String startTime();
    String regatta();
    String regattas();
    String startTracking();
    String stopTracking();
    String connections();
    String historyOfConnections();
    String defineNewConnection();
    String trackedRaces();
    String canSendRequests();
    String connectAndReadRaces();
    String trackSettings();
    String ports();
    String liveData();
    String storedData();
    String uris();
    String jsonUrl();
    String livePort();
    String storedPort();
    String liveUri();
    String storedUri();
    String eventsConnectedTo();
    String hostname();
    String declinationCheckbox();
    String raceStartTrackingColumn();
    String pauseAutomaticRefresh();
    String autoRefresh();
    String delayInSeconds();
    String delayBetweenAutoAdvances();
    String delayMustBeNonNegative();
    String chooseUpdateIntervalOfAtLeastOneSecond();
    String errorSettingWindForRace();
    String errorFetchingWindInformationForRace();
    String errorWhileTryingToSetWindSourceForRace();
    String inEvent();
    String to();
    String toSide();
    String showEstimatedWind();
    String timing();
    String raceDetailsToShow();
    String legDetailsToShow();
    String columnMoveUp();
    String columnMoveDown();
    String port();
    String raceStartTimeColumn();
    String showOnlySelectedCompetitors();
    String showSelectedCompetitorsInfo();
    String lengthInSeconds();
    String selectedRaces();
    String stressTest();
    String numberOfManeuvers();
    String tacks();
    String jibes();
    String penaltyCircles();
    String medalRaceIsNull();
    String maneuverTypes();
    @Override
    String configuration();
    String chooseChart();
    String distanceTraveled();
    String velocityMadeGoodLong();
    String speedOverGroundLong();
    String gapToLeaderLong();
    String pointsToLoad();
    String speed();
    String distance();
    String in();
    String secondsUnit();
    String secondsPerNauticalMileUnit();
    String metersUnit();
    @Override
    String close();
    String compareCompetitors();
    String description();
    String sailNumber();
    String country();
    String no3LetterCodes();
    @Override
    String add();
    String delete();
    String showCharts();
    String raceWithThisNameAlreadyExists();
    String raceWithThisNameAlreadyExistsInRegatta();
    String headUp();
    String bearAway();
    String tack();
    String jibe();
    String penaltyCircle();
    String markPassing();
    String mark();
    String otherManeuver();
    String douglasPeuckerPoints();
    String filterRacesByName();
    String filterMediaByName();
    String actionEdit();
    String actionEditScores();
    String actionEditCompetitors();
    String actionOpenBrowser();
    String actionRemove();
    String actionEditSeries();
    String actionRaceEdit();
    String actionRaceUnlink();
    String actionRaceRemove();
    String actionExportXML();
    String actionOpenDashboard();
    String filterLeaderboardsByName();
    String actions();
    String islinked();
    String yes();
    String no();
    String hoverOverAPoint();
    String noSelection();
    String raceIsKnownToStartUpwind();
    String events();
    String settingsForComponent(String localizedComponentName);
    String noEventsFound();
    String noEventSelected();
    String noLeaderboardsFound();
    String searchEvents();
    String location();
    String from();
    String until();
    String onlyLiveEvents();
    String locationNotAvailable();
    String startDateNotAvailable();
    String startDate();
    String endDate();
    String unknownManeuver();
    String tailLengthMustBePositive();
    String failedToLoadRaceInformation(String message);
    String competitorPassedMarkAtDate(String competitorName, String markName, String dateTime);
    String valueForCompetitorAt(String competitorName, String dateTime, String valueWithUnit);
    String reallyRemoveRace(String string);
    String showDetails();
    String hideLeaderboard();
    String hideLeaderboards();
    String showLeaderboard();
    String hideRaces();
    String showMap();
    String hideMap();
    String noLeaderboardSelected();
    String leaderboardGroups();
    String filterLeaderboardGroupsByName();
    String createNewLeaderboardGroup();
    String leaderboardGroupConfiguration();
    String legs();
    String currentLeg();
    String leaderboardGroup();
    String pleaseEnterNonEmptyDescription();
    String groupWithThisNameAlreadyExists();
    String detailsOfLeaderboardGroup();
    String edit();
    String save();
    String abort();
    String noLeaderboardGroupWithNameFound(String groupName);
    String overview();
    String welcomeToSailingAnalytics();
    String welcomeToSailingAnalyticsBody();
    String home();
    String clickAndDragToZoomIn();
    String windSpeed();
    String allTimesInUTC();
    String autoZoomTo();
    String autoZoomToBoats();
    String autoZoomToBuoys();
    String autoZoomOff();
    String autoZoomToTails();
    String autoZoomToWindSensors();
    String autoZoomSelectedCompetitors();
    String bearing();
    String zoom();
    String stepSizeMustBeGreaterThanNull();
    String stepSizeInSeconds();
    String refreshInterval();
    String refreshIntervalMustBeGreaterThanXSeconds(String seconds);
    String competitorCharts();
    String selectAtLeastOneCompetitor();
    String directionChange();
    String speedChange();
    String degreesShort();
    String untracked();
    String delayForLiveMode();
    String notAvailable();
    String details();
    String noGroupSelected();
    String combinedWindSourceTypeName();
    String courseBasedWindSourceTypeName();
    String trackBasedEstimationWindSourceTypeName();
    String windSensorWindSourceTypeName();
    String webWindSourceTypeName();
    String raceCommitteeWindSourceTypeName();
    String clickChartToSetTime();
    String position();
    String windSourcesUsed();
    String errorTryingToUpdateWindSourcesToExclude(String raceName, String message);
    String feedback();
    String startStopPlaying();
    String backToLive();
    String slowPlaySpeedDown();
    String speedPlaySpeedUp();
    String showHideComponent(String localizedShortName);
    String degreesBoatToTheWind();
    String racesInLeaderboard();
    String leaderboardsInGroup();
    String replication();
    String errorFetchingReplicaData(String message);
    String averageAbsoluteCrossTrackErrorInMeters();
    String averageSignedCrossTrackErrorInMeters();
    String enterMaster();
    String errorStartingReplication(String hostname, String exchangeName, String message);
    String helpLines();
    String startLine();
    String finishLine();
    String advantageLine();
    String courseMiddleLine();
    String messagingPortNumber();
    String servletPortNumber();
    String registeredAt(String string);
    String replicatingFromMaster(String hostname, int jmsPort, int servletPort);
    String showWindSpeedSeries();
    String showWindDirectionSeries();
    String fleet();
    String boatClass();
    String setDelayToLive();
    String pleaseEnterNonEmptyVenue();
    String pleaseEnterStartAndEndDate();
    String startDateMustBeforeEndDate();
    String eventWithThisNameAlreadyExists();
    String venue();
    String pleaseSelectABoatClass();
    String regattaWithThisNameAlreadyExists();
    String seriesWithThisNameAlreadyExists();
    String fleetWithThisNameAlreadyExists();
    String fleets();
    String series();
    String splitFleet();
    String color();
    String medalSeries();
    String noColor();
    String pleaseSelectARegatta();
    String addFleet();
    String doYouReallyWantToRemoveRegatta(String name);
    String errorLoadingScoreCorrectionProviders(String message);
    String selectResultListToImportFrom();
    String of();
    String errorObtainingScoreCorrections(String scoreCorrectionProviderName, String eventName, String boatClassName,
            String string, String message);
    String assignRaceNumbersToRaceColumns();
    String importOfficialResults();
    String selectAll();
    String apply();
    String successfullyUpdatedScores();
    String errorUpdatingScoresForLeaderboard(String leaderboardName, String message);
    String maneuverTypesToShowWhenCompetitorIsClicked();
    String simulateWithStartTimeNow();
    String boatClassDoesNotMatchSelectedRegatta(String boatClass);
    String regattaExistForSelectedBoatClass();
    String reload();
    String addRegatta();
    String importRegattas();
    String exchangeName();
    String course();
    String courseLayout();
    String buoy();
    String gate();
    String buoys();
    String waypoint();
    String showAllCompetitors();
    String boatTails();
    String startFirstMarkTriangle();
    String resultImportUrls();
    String errorRefreshingResultImportUrlList(String message);
    String successfullyUpdatedResultImportUrls();
    String errorRemovingResultImportUrls(String message);
    String pleaseEnterNonEmptyUrl();
    String addResultImportUrl();
    String errorAddingResultImportUrl(String message);
    String sailingServers();
    String errorRefreshingSailingServers(String message);
    String successfullyUpdatedSailingServers();
    String errorRemovingSailingServers(String message);
    String addSailingServer();
    String errorAddingSailingServer(String message);
    String errorTryingToObtainLeaderboardContents(String message);
    String lastScoreUpdate();
    String warningBrowserUnsupported();
    String newMark();
    String controlPoint();
    String errorUpdatingRaceCourse(String message);
    String successfullyUpdatedCourse();
    String selectTwoMarksForGate();
    String errorTryingToObtainTheMarksOfTheRace(String message);
    String errorTryingToObtainRaceCourse(String message);
    String insertWaypointBeforeSelected();
    String insertWaypointAfterSelected();
    String addGate();
    String scoringSchemeLowPointSystem();
    String scoringSchemeHighPointSystem();
    String scoringSchemeLowPointWinnerGetsZero();
    String scoringSchemeWinnerGetsFive();
    String scoringSchemeWinnerGetsSix();
    String scoringSchemeWinnerGetsEight();
    String scoringSchemeWinnerGetsEightAndInterpolation();
    String scoringSystem();
    String createFlexibleLeaderboard();
    String createRegattaLeaderboard();
    String editFlexibleLeaderboard();
    String editRegattaLeaderboard();
    String defaultRegatta();
    String useOverallLeaderboard();
    String overallStandings();
    String scoringSchemeHighPointEssOverall();
    String scoringSchemeHighPointLastBreaksTie();
    String type();
    String actionAddRaces();
    String racesWithNamePrefix();
    String maximumSpeedOverGroundInKnots();
    String totalTimeSailedDownwindInSeconds();
    String totalTimeSailedUpwindInSeconds();
    String totalTimeSailedReachingInSeconds();
    String totalTimeSailedInSeconds();
    String overallDetailsToShow();
    String hhmmssUnit();
    String actionAddWindData();
    String valueMustBeBetweenMinMax(String name, String minValue, String maxValue);
    String optional();
    String pleaseEnterAValue();
    String latitude();
    String longitude();
    String actionAddEvent();
    String publicationUrl();
    String suppress();
    String isPublic();
    String unsuppress();
    String suppressedCompetitors();
    String pleaseSelectASeries();
    String pleaseSelectARace();
    String displayGroupsInReverseOrder();
    String actionConfigureUrl();
    String configureLeaderboardUrlDescription();
    String embedded();
    String mediaPanel();
    String url();
    String mimeType();
    String title();
    String reallyRemoveMediaTrack(String mediaTrackTitle);
    String duration();
    String addMediaTrack();
    String addYoutubeTrack();
    String youtubeId();
    String additionalUrlSettings();
    String restrictToSingleSelectedRace();
    String expandSelectedRace();
    String showRaceDetails();
    String numberOfRaces();
    String numberOfRacesMustBeNonNegativeNumber();
    String chooseTheWayYouSelectRaces();
    String selectFromAllRaces();
    String selectANumberOfRaces();
    String numberOfLastNRaces();
    String expandLastRace();
    String factor();
    String errorUpdatingIsMedalRace(String message);
    String maneuverLoss();
    String averageManeuverLossInMeters();
    String averageTackLossInMeters();
    String averageJibeLossInMeters();
    String shape();
    String pattern();
    String legend();
    String live();
    String swissTimingArchiveConnector();
    String errorFetchingChartData(String message);
    String loadingCompetitorData();
    String competitorRegattaDataAfterRaceN(String detailType, String raceColumnName);
    String showRankChart();
    String rankChart();
    String totalPoints();
    String raceTotalPointsTooltip();
    String regattaTotalPointsTooltip();
    String overallLeaderboardSelection();
    String errorTryingToObtainOverallLeaderboards(String message);
    String finished();
    String upcoming();
    String inProgress();
    String passedTo(String name);
    String gapChangeSinceLegStartInSeconds();
    String sideToWhichMarkAtLegStartWasRounded();
    String raceIsLive(String raceName);
    String racesAreLive(String raceNames);
    String scoringSchemeHighPointFirstGetsOne();
    String scoringSchemeHighPointFirstGetsTen();
    String knotsUnit();
    String averageJibeLossInMetersTooltip();
    String averageManeuverLossInMetersTooltip();
    String averageTackLossInMetersTooltip();
    String currentLegTooltip();
    String distanceTraveledTooltip();
    String estimatedTimeToNextWaypointInSecondsTooltip();
    String gapToLeaderInSecondsTooltip();
    String averageSpeedInKnotsTooltip();
    String jibeTooltip();
    String maximumSpeedOverGroundInKnotsTooltip();
    String numberOfManeuversTooltip();
    String penaltyCircleTooltip();
    String raceAverageSpeedInKnotsTooltip();
    String currentSpeedOverGroundInKnotsTooltip();
    String windwardDistanceToCompetitorFarthestAheadInMetersTooltip();
    String raceDistanceTraveledTooltip();
    String rankTooltip();
    String rankGainTooltip();
    String tackTooltip();
    String timeTooltip();
    String totalTimeSailedDownwindInSecondsTooltip();
    String totalTimeSailedInSecondsTooltip();
    String totalTimeSailedReachingInSecondsTooltip();
    String totalTimeSailedUpwindInSecondsTooltip();
    String windwardDistanceToGoInMetersTooltip();
    String averageAbsoluteCrossTrackErrorInMetersTooltip();
    String averageSignedCrossTrackErrorInMetersTooltip();
    String raceAverageAbsoluteCrossTrackErrorInMetersTooltip();
    String raceAverageSignedCrossTrackErrorInMetersTooltip();
    String gapChangeSinceLegStartInSecondsTooltip();
    String velocityMadeGoodInKnotsTooltip();
    String sideToWhichMarkAtLegStartWasRoundedTooltip();
    String generatePolarSheet();
    String polarSheetChart();
    String polarSheetMinimumDataSizePerGraph();
    String polarSheetMinimumDataSizePerGraphTooltip();
    String polarSheetMinimumDataSizePerAngle();
    String polarSheetMinimumDataSizePerAngleTooltip();
    String polarSheetMinimumWindConfidence();
    String polarSheetMinimumWindConfidenceTooltip();
    String polarSheetMinimumConfidenceMeasure();
    String polarSheetMinimumConfidenceMeasureTooltip();
    String polarSheetUseOnlyWindGaugeData();
    String polarSheetUseOnlyWindGaugeDataTooltip();
    String polarSheetUseOnlyEstimationData();
    String polarSheetUseOnlyEstimationDataTooltip();
    String polarSheetRemoveOutliers();
    String polarSheetRemoveOutliersTooltip();
    String polarSheetOutlierDetectionRadius();
    String polarSheetOutlierDetectionRadiusTooltip();
    String polarSheetOutlierDetectionMinimumPerc();
    String polarSheetOutlierDetectionMinimumPercTooltip();
    String polarSheetNumberOfHistogramColumns();
    String polarSheetWindSteppingInKnots();
    String polarSheetWindSteppingMaxDistance();
    String polarSheetWindSteppingMaxDistanceTooltip();
    String polarSheetSplitByWindGauges();
    String polarSheetSplitByWindGaugesTooltip();
    String pleaseSeeToolTips();
    String numberOfManeuversInRaceTooltip();
    String competitorColumnTooltip();
    String sailIdColumnTooltip();
    String rankColumnTooltip();
    String carryColumnTooltip();
    String totalsColumnTooltip();
    String windData();
    String gpsData();
    String status();
    String regattaRank();
    String regattaRankTooltip();
    String overallRank();
    String overallRankTooltip();
    String noDataFound();
    String displayName();
    String histogram();
    String numberOfDataPoints();
    String angleAndTotalNumberOfDataPointsAndCovAndCm(int angle, int dataCount, double coefficiantOfVariation,
            double confidenceMeasure);
    String buoyZone();
    String radiusInMeters();
    String addCourseArea();
    String courseAreas();
    String courseArea();
    String pleaseEnterNonEmptyCourseArea();
    String pleaseSelectACourseArea();
    String totalDistanceTraveled();
    String totalDistanceTraveledTooltip();
    String totalAverageSpeedOverGround();
    String totalAverageSpeedOverGroundTooltip();
    String noStarttimeAnnouncedYet();
    String lastUpperFlag();
    String lastLowerFlag();
    String filterRegattasByName();
    String noRegattasYet();
    String cannotAddRacesToRegattaLeaderboardButOnlyToRegatta();
    String correctScore();
    String correctScoreFor(String competitorName, String raceColumnName);
    String penaltyOrRedress();
    String netScore();
    String timePointMustBeAfterStartOfTracking();
    String timePointMustBeBeforeEndOfTracking();
    String regattaUsedForTheTrackedRace();
    String tracTracUpdateUrl();
    String passingInstructions();
    String refreshNow();
    String stopUpdating();
    String startUpdating();
    String currentTime();
    String tractracUsername();
    String tractracPassword();
    String operatorEquals();
    String operatorNotEqualTo();
    String operatorLessThan();
    String operatorLessThanEquals();
    String operatorGreaterThan();
    String operatorGreaterThanEquals();
    String operatorContains();
    String operatorNotContains();
    String operatorStartsWith();
    String operatorEndsWith();
    String nationality();
    String numberMustBePositive();
    String distanceToLineAtRaceStart();
    String speedOverGroundAtRaceStart();
    String speedOverGroundWhenPassingStart();
    String distanceToLineAtRaceStartTooltip();
    String speedOverGroundAtRaceStartTooltip();
    String speedOverGroundWhenPassingStartTooltip();
    String startTack();
    String startTackTooltip();
    String portTack();
    String starboardTack();
    String portSide();
    String starboardSide();
    String pleaseEnterANumber();
    String competitorsFilter();
    String flagStatus();
    String additionalInformation();
    String actionAddFilter();
    String actionEditFilter();
    String availableFilters();
    String createFilterHint();
    String windFixListingDescription();
    String noWindFixesAvailable();
    String distanceToStarboardEndOfStartlineWhenPassingStart();
    String distanceToStarboardEndOfStartlineWhenPassingStartTooltip();
    String filterThisNameAlreadyExists();
    String addAtLeastOneFilterCriteria();
    String filterCriteria();
    String selectAFilterCriteria();
    String filterName();
    String operator();
    String value();
    String nationalityMustBeISOorIOCcode();
    String raceRank();
    String waypoints();
    String disableRaceFilter();
    String enableRaceFilter();
    String raceStatusColumn();
    String loading();
    String racesWithHiddenState();
    String selectedCompetitors();
    String mediaDateFormatError(String expectedTimeFormat);
    String filterNothing();
    String topNCompetitorsByRaceRank(int n);
    String topNCompetitorsByTotalRank(int n);
    
    String editRegatta();
    String selectSailingEvent();
    String selectCourseArea();

    /*Start of simulator related messages*/
    String simulator();
    String optionsBar();
    String simulateButton();

    String setup();
    String strength();
    String oscillation();
    String oscillating();
    String amplitude();
    String frequency();
    String noise();

    String sailing();
    String optimality();
    String maximumTurns();
    String raceDirection();
    String upWind();
    String downWind();
    String strategies();
    String omniscient();
    String opportunistic();
    String mixed();
    String maps();
    String startEnd();
    String racecourse();
    String summary();
    String replay();
    String display();

    String simulatorPolarHeader();
    String show();
    String hide();

    String leftWind();
    String rightWind();
    String strategyOption1();
    String strategyOption2();
    String strategyOption3();
    String legLabel();
    String raceLabel();
    String competitorLabel();

    String freemode();
    String whatIfCourse();
    /*End of simulator related messages*/
    
    String courseAreaOverview();
    String courseDesignOverview();
    String regattaOverview();
    String additionalSettings();
    String showFollowingCourseAreas();
    String showFollowingRegattas();
    String showOnlyRacesOfSameDay();
    String showOnlyCurrentlyRunningRaces();
    String seriesDefinesResultDiscardingRule();
    String addSeries();
    String regattaDefinesResultDiscardingRules();
    String startsWithZeroScore();
    String masterDataImportPanel();
    String importSuccess(int leaderboardGroups, int leaderboards, int events, int regattas);
    String importSuccessOverwriteInfo();
    String regattaOverviewConfiguration();
    String firstRaceIsNonDiscardableCarryForward();
    String addReplicationMaster();
    String connect();
    String connectToMaster();
    String explainReplicationHostname();
    String explainReplicationExchangeName();
    String explainReplicationExchangePort();
    String explainReplicationServletPort();
    String explainReplicasRegistered();
    String explainConnectionsToMaster();
    String explainNoConnectionsToMaster();
    String explainNoConnectionsFromReplicas();
    String stopConnectionToMaster();
    String asLink();
    String raceIsRunning();
    String raceIsFinishing();
    String raceIsFinished();
    String raceIsScheduled();
    String raceIsInStartphase();
    String generalRecall();
    String startPostponed();
    String raceAbandoned();
    String stopAllReplicas();
    String warningServerIsReplica();
    String dropReplicaConnection();
    String timePanelName();
    String competitorFilterExplanation();
    String protestTimeFinishesAt();
    String protestTimeFinishedAt();
    String flags();
    String lastUpdate();
    String earlyStarters();
    String noMoreRacingToday();
    String furtherSignalsAshore();
    String showingDetailsOfRace(String raceName);
    String startAt();
    String finishAt();
    String protestEndsAt();
    String unknown();
    String raceLog();
    String regattaLog();
    String refreshRaceLog();
    String raceLogReloaded();
    String reloadAllRaceLogs();
    String sideline();
    String classAndGolfUp();
    String classDisplayed();
    String papaDisplayed();
    String blackDisplayed();
    String zuluIndiaDisplayed();
    String papaRemoved();
    String blackRemoved();
    String zuluIndiaRemoved();
    String classFlagRemoved();
    String xray();
    String firstSubstitute();
    String blueFlagDisplayed();
    String blueFlagRemoved();
    String golfRemoved();
    String answeringPennantOverAlphaDisplayed();
    String answeringPennantOverHotelDisplayed();
    String answeringPennantDisplayed();
    String answeringPennantRemoved();
    String novemberOverAlphaDisplayed();
    String novemberOverHotelDisplayed();
    String novemberDisplayed();
    String bravoDisplayed();
    String bravoRemoved();
    String essThreeDisplayed();
    String essTwoDisplayed();
    String essOneDisplayed();
    String essOneRemoved();
    String export();
    String dataBeforeAfter();
    String rawFixes();
    String importRemoteHost();
    String importFetchRemoteLgs();
    String importUrlInvalid(String url);
    String importGetLeaderboardsFailed(String host, String errorMessage);
    String importNoDataReturned();
    String importServerError();
    String importLeaderboardGroups();
    String importOverrideSwitchLabel();
    String importSelectedLeaderboardGroups();
    String importSelectAtLeastOne();
    String deselectAll();
    String polarDiagramButton();
    String ratioBetweenTimeSinceLastPositionFixAndAverageSamplingInterval();
    String ratioBetweenTimeSinceLastPositionFixAndAverageSamplingIntervalTooltip();
    String trackingQuality();
    String legType();
    String seriesLeaderboard();
    String regattaLeaderboards();
    String polars();
    String sailID();
    String clearSelection();
    String running();
    String distanceToLineFiveSecondsBeforeStart();
    String speedOverGroundFiveSecondsBeforeStart();
    String distanceToLineFiveSecondsBeforeStartTooltip();
    String speedOverGroundFiveSecondsBeforeStartTooltip();
    String runAsSubstantive();
    String done();
    String lastFinished();
    String run();
    String times();
    String dataAmount();
    String averageCleanedServerTime();
    String averageCleanedOverallTime();
    String dataMiningBenchmarkResults();
    String serverTime();
    String cleanedServerTime();
    String overallTime();
    String cleanedOverallTime();
    String dataMiningResult();
    String confidenceShouldBeBetween();
    String minDataValuesNeedToBeAtLeastZero();
    String numberOfColumnsAtLeast2();
    String outlierRadiusNeedsToBePositiveString();
    String outlierMinimumNeighborhoodPctString();
    String oneOrMoreParametersAreEmpty();
    String errorWhileAddingSeriesToChart();
    String generatingPolarSheet();
    String dataCount();
    String generationFinished();
    String generating();
    String removeAllSheets();
    String removeAll();
    String selectSheet();
    String groupBy();
    String statisticToCalculate();
    String queryResultsChartSubtitle(int retrievedDataAmount, double calculationTime);
    String noQuerySelected();
    String runAutomatically();
    String noStatisticSelectedError();
    String noCustomGrouperScriptTextError();
    String noDimensionToGroupBySelectedError();
    String noGrouperSelectedError();
    String noDataRetrieverChainDefinitonSelectedError();
    String windImport_Upload();
    String windImport_Title();
    String windImport_BoatId();
    String windImport_SelectedRacesWarning(int selectedRacesCount);
    String windImport_AllRacesWarning();
    String windImport_ResultHeader(String firstWindDate, String lastWindDate, int affectedRacesCount);
    String windImport_ResultError(String errorMessage);
    String windImport_ResultEntry(String raceName, String regattaName, int windFixesCount, String firstWindDate, String lastWindDate);
    String showWindSpeedSeriesTooltip();
    String showWindDirectionSeriesTooltip();
    String combinedWindSourceTypeTooltip();
    String courseBasedWindSourceTypeTooltip();
    String trackBasedEstimationWindSourceTypeTooltip();
    String windSensorWindSourceTypeTooltip();
    String webWindSourceTypeTooltip();
    String raceCommitteeWindSourceTypeTooltip();
    String sheetName();
    String sheetNameTooltip();
    String timeDownwind();
    String timeReaching();
    String timeUpwind();
    String raceTimeTooltip();
    String raceTimeDownwindTooltip();
    String raceTimeReachingTooltip();
    String raceTimeUpwindTooltip();
    String queryNotValidBecause();
    String dataMining();
    String hideToolbar();
    String showSeriesLeaderboards();
    String showOverallLeaderboard();
    String exchangeHost();
    String explainExchangeHostName();
    String errorRunningDataMiningQuery();
    String offset();
    String line();
    String lineAngleToWindAndAdvantage(String startLineLength, String startLineAngleToCombinedWind, String startLineAdvantageousSide, String startLineAdvantageInMeters);
    String doYouReallyWantToRemoveEvents();
    String doYouReallyWantToRemoveEvent(String eventName);
    String doYouReallyWantToRemoveCompetitors();
    String doYouReallyWantToRemoveCompetitor(String name);
    String filterCompetitors();
    String editCompetitor();
    String pleaseEnterASailNumber();
    String successfullyAllowedCompetitorReset(String names);
    String allowReload();
    String id();
    String compress();
    String compressTooltip();
    String queryRunner();
    String rerunQueryAfterRefresh();
    String refreshIntervalMustntBeEmpty();
    String selectionTables();

    String addConfiguration();
    String noConfigurations();
    String errorRetrievingConfiguration();
    String allowedCourseAreas();
    String minimumRoundsForCourse();
    String maximumRoundsForCourse();
    String resultsMailRecipient();
    String deviceConfiguration();
    
    String none();
    String courseDesignerMode();
    String racingProcedure();
    String courseNames();
    String generate();
    String dontoverwrite();
    
    String setRacingProcedureConfiguration();
    String racingProcedureConfiguration();
    String activateIndividualRecall();
    String rrs26Start();
    String setConfiguration();
    String classFlag();
    String classFlagHelpText(String procedure);
    String individualRecallHelpText();
    String startmodeFlags(); 
    String startmodeFlagsHelpText();
    String gateStart();
    String activatePathfinder();
    String pathfinderHelpText();
    String essStart();
    String basicStart();
    String leagueStart();
    String configured();
    String overwriteRacingProceduresConfiguration();
    String overwriteRacingProceduresConfigurationHelpText();
    
    String setStartTime();
    String currentPass();
    String setStartTimeDescription();
    String hasAdditionalGolfDownTime();
    String additionalGolfDownTimeHelpText();
    String invalidColor(String message);
    String igtimiAccounts();
    String errorFetchingIgtimiAccounts(String message);
    String addIgtimiAccount();
    String errorAuthorizingAccessToIgtimiUser(String text, String message);
    String successfullyAuthorizedAccessToIgtimiUser(String username);
    String couldNotAuthorizedAccessToIgtimiUser(String text);
    String errorGettingIgtimiAuthorizationUrl(String message);
    String addIgtimiUser();
    String doYouReallyWantToRemoveLeaderboards();
    String errorTryingToRemoveIgtimiAccount(String eMailOfAccountToRemove);
    String successfullyRemoveIgtimiAccount(String eMailOfAccountToRemove);
    String eMailMustNotBeEmpty();
    String emailAddress();
    String password();
    String doYouReallyWantToRemoveLeaderboard(String name);
    String metaLeaderboardCannotBeChanged();
    String failedToSetNewStartTime();
    String doYouReallyWantToRemoveIgtimiAccount(String accountEmail);
    String igtimiWindImport();
    String seeIgtimiTabForAccountSettings();
    String importWindFromIgtimi();
    String errorImportingIgtimiWind(String message);
    String resultFromIgtimiWindImport(String string);
    String timeToStart(String timeToStart);
    String timeSinceStart(String timeSince);
    String distanceToLine();
    String beatAngleTooltip();
    String beatAngle();
    String showBoatClassChartsLabel();
    String showDiagram();
    String runAutomaticallyTooltip();
    String rerunQueryAfterRefreshTooltip();
    String queryDefinitionProvider();
    String statisticProvider();
    String calculateThe();
    String groupingProvider();
    String releaseNotes();
    String hasSplitFleetContiguousScoring();
    String eventOverview();
    String addRaceLogTracker();
    String addRaceLogTrackers();
    String denoteForRaceLogTracking();
    String raceLogTracking();
    String startRaceLogTracking();
    String filterByLeaderboard();
    String removeLeaderboardFilter();
    String competitorRegistrations();
    String trackerStatus();
    String canOnlyBeEditedBeforeStartingTracking();
    String defineCourse();
    String mapDevices();
    @Key("edit_what")
    String edit(String what);
    @Key("add_what")
    String add(String what);
    @Key("remove_what")
    String remove(String what);
    String pleaseEnterA(String what);
    String pingPosition(String whose);
    String pleaseEnterAValidValueFor(String what, String validTemplate);
    String copyCourseAndCompetitors();
    String nowSelectRaceColumnAndFleetToCopyTo();
    String selectRowInTableToCopyCourse();
    String deviceId();
    String deviceType();
    String mappedToType();
    String mappedTo();
    String deviceMappings();
    String atMostOneEndOfTheTimeRangeMayBeOpen();
    String pleaseSelectAnItemToMapTo();
    String device();
    String timeRange();
    String closeTimeRange();
    String setClosingTimePoint();
    String startOfTimeRangeMustLieBeforeEnd();
    String start();
    String overallProgress();
    String showAddedScores();
    String ratio();
    String importWind();
    String importWindTooltip();
    String authorName();
    String authorPriority();
    String removeDenotation();
    String competitorRegistrationsMissingProceed(String namesOfRaces);
    String pleaseSelectAControlPoint();
    String twoMarkControlPoint();
    String registeredCompetitors();
    String competitorPool();
    String selectAtLeastOne();
    String selectRaces();
    String importFixes();
    String noSailingServerInstancesYet();
    String registeredSailingServerInstances();
    String filterEventsByName();
    String leaderboardsExceptFromSelectedGroup();
    String availableLeaderboardGroups();
    String leaderboardGroupsOfSelectedEvent();
    String addRaces();
    String withNamePrefix();
    String pleaseSelectASeriesFirst();
    String upcommingEventStartsInDays(@PluralCount(DefaultRule_0_1_2_n.class) int days);
    String sharingMailTooltip();
    String sharingTwitterTooltip();
    String sharingFacebookTooltip();
    String eventSharingShortText(String eventName, String venue, String dateString);
    String eventSharingLongText(String eventName, String venue, String dateString, String url);
    String seriesSharingShortText(String seriesName);
    String seriesSharingLongText(String seriesName, String url);
    String competitorsAnalytics();
    String mediaNoContent();
    String media();
    String photos();
    String videos();
    String image();
    String video();
    String flagImageURL();
    String imageURLs();
    String videoURLs();
    String sponsorImageURLs();
    String invalidSelection();
    String advancePassId();
    String pleaseSelectAScoringResult();
    String eventOfficialWebsiteURL();
    String eventOverviewURL();
    String eventLogoImageURL();
    String showPingMarkMappings();
    String errorFetchingWindStreamletData(String message);
    String showWindStreamletOverlay();
    String showSimulationOverlay();
    String simulationLegendTooltip();
    String regattaNameMustNotContainSlashes();
    String showNumberOfRacesScored();
    String racesScored();
    String racesScoredTooltip();
    String averageNumberOfOperationsPerMessage();
    String showUncorrectedNetPoints();
    String setStartTimeReceived();
    String setStartTimeReceivedDescription();
    String lastScoreCorrectionsTime();
    String lastScoreCorrectionsComment();
    String setTimeToNow();
    String useStartTimeInference();
    String numberOfQueueMessagesSent();
    String totalSize();
    String averageMessageSize();
    String totalNumberOfOperations();
    String currentOrAverageSpeedOverGroundInKnotsTooltip();
    String currentOrAverageSpeedOverGroundInKnots();
    String connectors();
    String scoringSchemeHighPointFirstGetsTenOrEight();
    String videoComponentShortName();
    String competitorSearchFilter();
    String searchCompetitorsBySailNumberOrName();
    String goToEventOverview();
    String goToOverviewAndSeeLeaderboard();
    String noSuchEvent();
    String leaderboardNotContainedInLeaderboardGroup(String leaderboardName, String leaderboardGroupName);
    String leaderboardGroupNotContainedInEvent(String leaderboardGroupName, String name);
    String raceIsInLiveTimePanelMode();
    String backToLiveTimePanelMode();
    String windChart();
    String mediaNoVideosCaption();
    String mediaShowVideoCaption();
    String mediaShowVideoTooltip(String title);
    String mediaHideVideoCaption();
    String mediaHideVideoTooltip();
    String mediaSelectVideoCaption(int mediaCount);
    String mediaSelectVideoTooltip();
    String mediaManageMediaCaption();
    String mediaManageMediaTooltip();
    String showAll();
    String raceVisibilityColumn();
    String enterCarryValueFor(String competitorName);
    String advanced();
    String basedOn();
    String retrieveWith();
    String mappingDetails();
    String deviceMappingQrCodeExplanation();
    String qrCode();
    String enterCourseAreaName();
    String enterImageURL();
    String enterVideoURL();
    String enterSponsorImageURL();
    String enterRaceName();
    String enterCourseName();
    String scoringSchemeHighPointFirstGetsTenOrEightDescription();
    @Override
    String serverError();
    @Override
    String remoteProcedureCall();
    @Override
    String serverReplies();
    @Override
    String errorCommunicatingWithServer();
    String userManagement();
    String structureImportUrls();
    String filteredBy();
    String filterBy();
    String editSeries();
    String pleaseSelectAtLeastOneRegatta();
    String pleaseSelectAnEvent();
    String showXYDiagram();
    String xyDiagram();
    String boatSpeed();
    String confidence();
    String errorTryingToGetEvents(String message);
    String createDefaultSettingsForAllRegattas();
    String noOverallEventSelected();
    String errorTryingToCreateNewEvent(String name, String message);
    String createNewEvent();
    String noFleetsDefined();
    String successfullyCreatedRegattas();
    String errorTryingToRegisterRacesForTracking(String raceNames, String message);
    String errorDeterminingPolarAvailability(String raceName, String message);
    String error();
    String fileStorage();
    String active();
    String scoringSchemeHighPointEssOverallDescription();
    String timeBetweenRaceStartAndCompetitorStartInSeconds();
    String timeBetweenRaceStartAndCompetitorStartInSecondsTooltip();
    String useInternalAlgorithm();
    String editMarkPassings();
    String removeFixedPassings();
    String setFixedPassing();
    String setSuppressedPassing();
    String removeSuppressedPassing();
    String errorRemovingFixedPassing(String message);
    String errorSettingFixedPassing(String message);
    String errorSuppressingPassing(String message);
    String errorRemovingSupressedPassing(String message);
    String errorTryingToObtainMarkPassing(String message);
    String errorTryingToObtainRaceLogMarkPassingData(String message);
    String email();
    String pleaseEnterAnEmail();
    String inviteCompetitors();
    String notAllCompetitorsProvideEmail();
    String sendingMailsFailed();
    String sendingMailsSuccessful();
    String selectEventForInvitation();
    String imageURL();
    @Override
    String upload();
    String removeResult(JSONValue status, JSONValue message);
    @Override
    String uploadSuccessful();
    @Override
    String fileUploadResult(String status, String message);
    @Override
    String removeUploadedFile();
    String showCompetitorSailIdColumn();
    String showCompetitorFullNameColumn();
    String loadingDimensionValues();
    String runningQuery();
    String inviteBuoyTenders();
    String orMultipleEmails();
    String courseOverGroundTrueDegreesTooltip();
    String courseOverGroundTrueDegrees();
    String distanceIncludingGateStartInMeters();
    String distanceTraveledIncludingGateStartTooltip();
    String raceDistanceTraveledIncludingGateStartTooltip();
    String results();
    String group();
    String valueAscending();
    String valueDescending();
    String sortBy();
    
    String dashboardWindBotLoadingText();
    String dashboardWindBotLoadingMessage();
    String dashboardWindBotNotAvailable();
    String dashboardWindBot();
    String dashboardTrueWindSpeed();
    String dashboardTrueWindDirection();
    String dashboardTrueWindSpeedUnit();
    String dashboardTrueWindDirectionUnit();
    String dashboardLiveWind();
    String dashboardAverageWind();
    String dashboardAverageWindMinutes(int minutes);
    String dashboardWindChartHint();
    
    String dashboardNewStartAnalysisAvailable();
    
    String dashboardStartlineAdvantageByWind();
    String dashboardStartlineAdvantageByGeometry();
    String dashboardRankAtFirstMark();
    String dashboardTeam();
    String dashboardDistanceToLineInM();
    String dashboardSpeedInKts();
    String fixedMarkPassing();
    String suppressedMarkPassing();
    String windUp();
    String currentFilterSelection();
    String notCapableOfGeneratingACodeForIdentifier();
    String serverUrl();
    String rotatedFromTrueNorthClickToToggleWindUp(double mappedTrueNorthDeg);
    String startLineToFirstMarkTriangle(String distanceInMeters);
    String dataMiningComponentsHaveBeenUpdated();
    String dataMiningComponentsNeedReloadDialogMessage();
    
    String noDataForEvent();
    String countriesCount(@PluralCount(DefaultRule_1_0n.class) int count);
    String racesCount(@PluralCount(DefaultRule_1_0n.class) int count);
    String competitorsCount(@PluralCount(DefaultRule_1_0n.class) int count);
    String trackedRacesCount(@PluralCount(DefaultRule_1_0n.class) int count);
    String eventsCount(@PluralCount(DefaultRule_1_0n.class) int count);
    String clone();
    String changed();
    String matcher();
    String any();
    String urlProviders();
    String pleaseSelectAURLProvider();
    String sampleURL(String sampleURL);
    String sapSportsOn();
    String followSapSports();
    String showCompetitorTimeOnTimeFactorColumn();
    String showCompetitorTimeOnDistanceAllowanceColumn();
    String rankingMetric();
    String oneDesignRankingMetric();
    String orcPerformanceCurveRankingMetric();
    String timeOnTimeAndDistanceRankingMetric();
    String oneDesignRankingMetricDescription();
    String orcPerformanceCurveRankingMetricDescription();
    String timeOnTimeAndDistanceRankingMetricDescription();
    String timeOnTimeFactor();
    String timeOnDistanceAllowanceInSecondsPerNauticalMile();
    String calculatedTimeTraveled();
    String calculatedTimeTraveledTooltip();
    String timeOnTimeFactorTooltip();
    String timeOnDistanceAllowanceInSecondsPerNauticalMileTooltip();
    String raceCalculatedTimeAtEstimatedArrivalAtCompetitorFarthestAheadInSeconds();
    String raceCalculatedTimeAtEstimatedArrivalAtCompetitorFarthestAheadInSecondsTooltip();
}
