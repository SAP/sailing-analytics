package com.sap.sailing.gwt.ui.client;

import com.google.gwt.i18n.client.Messages;

public interface StringMessages extends Messages {
    String helloWorld();
    String kielWeel2011();
    String stgAccount();
    String tracTracEvents();
    String swissTimingEvents();
    String trackedBefore();
    String listRaces();
    String wind();
    String windPanelLabel();
    String refresh();
    String remove();
    String windSource();
    String dampeningInterval();
    String map();
    String race();
    String races();
    String tracked();
    String time();
    String playSpeed();
    String playSpeedHelp();
    String playModeLive();
    String playModeReplay();
    String timeDelay();
    String timeDelayHelp();
    String speedInKnots();
    String fromDeg();
    String noRacesYet();
    String total();
    String carry();
    String competitor();
    String competitors();
    String defaultLeaderboard();
    String noSuchLeaderboard();
    String leaderboardConfiguration();
    String newDotDotDot();
    String editScores();
    String columnNamesInSelectedLeaderboard();
    String addDotDotDot();
    String renameDotDotDot();
    String trackedRaceConnectedToSelectedRaceName();
    String linkToColumn();
    String unlink();
    String leaderboardName();
    String cancel();
    String pleaseEnterAName();
    String discardRacesFromHowManyStartedRacesOn();
    String leaderboardWithThisNameAlreadyExists();
    String discardThresholdsMustBeNumeric();
    String discardThresholdsMustBeAscending();
    String discarding();
    String startingFromNumberOfRaces();
    String renameLeaderboard();
    String addColumnToLeaderboard();
    String pleaseEnterNameForNewRaceColumn();
    String ok();
    String medalRace();
    String renameRace();
    String openSelectedLeaderboard();
    String rank();
    String totalRank();
    String collapse();
    String expand();
    String leg();
    String distanceInMeters();
    String distanceInMetersUnit();
    String averageSpeedInKnots();
    String averageSpeedInKnotsUnit();
    String rankGain();
    String sapSailingAnalytics();
    String leaderboard();
    String leaderboards();
    String leaderboardSettings();
    String settings();
    String selectAtLeastOneLegDetail();
    String currentSpeedOverGroundInKnots();
    String currentSpeedOverGroundInKnotsUnit();
    String estimatedTimeToNextWaypointInSeconds();
    String estimatedTimeToNextWaypointInSecondsUnit();
    String gapToLeaderInSeconds();
    String gapToLeaderInSecondsUnit();
    String velocityMadeGoodInKnots();
    String velocityMadeGoodInKnotsUnit();
    String windwardDistanceToGoInMeters();
    String windwardDistanceToLeaderInMeters();
    String windwardDistanceToGoInMetersUnit();
    String name();
    String leaveEmptyForDefault();
    String trackNewEvent();
    String trackableRaces();
    String trackWind();
    String regattaName();
    String event();
    String startTime();
    String regatta();
    String regattas();
    String startTracking();
    String stopTracking();
    String connections();
    String historyOfConnections();
    String defineNewConnection();
    String trackedRaces();
    String canSendRequests();
    String connectAndReadRaces();
    String trackSettings();
    String ports();
    String liveData();
    String storedData();
    String uris();
    String jsonUrl();
    String livePort();
    String storedPort();
    String liveUri();
    String storedUri();
    String eventsConnectedTo();
    String hostname();
    String declinationCheckbox();
    String raceStartTrackingColumn();
    String pauseAutomaticRefresh();
    String autoRefresh();
    String delayInSeconds();
    String delayBetweenAutoAdvances();
    String delayMustBeNonNegative();
    String chooseUpdateIntervalOfAtLeastOneSecond();
    String errorSettingWindForRace();
    String errorFetchingWindInformationForRace();
    String errorWhileTryingToSetWindSourceForRace();
    String inEvent();
    String to();
    String showEstimatedWind();
    String timing();
    String raceDetailsToShow();
    String legDetailsToShow();
    String columnMoveUp();
    String columnMoveDown();
    String port();
    String raceStartTimeColumn();
    String showOnlySelectedCompetitors();
    String showSelectedCompetitorsInfo();
    String lengthInSeconds();
    String selectedRaces();
    String stressTest();
    String numberOfManeuvers();
    String tacks();
    String jibes();
    String penaltyCircles();
    String medalRaceIsNull();
    String maneuverTypes();
    String configuration();
    String chooseChart();
    String distanceTraveled();
    String velocityMadeGoodLong();
    String speedOverGroundLong();
    String gapToLeaderLong();
    String pointsToLoad();
    String speed();
    String distance();
    String in();
    String secondsUnit();
    String metersUnit();
    String failedToLoadRaceData();
    String close();
    String compareCompetitors();
    String description();
    String sailNumber();
    String country();
    String no3LetterCodes();
    String add();
    String delete();
    String showCharts();
    String raceWithThisNameAlreadyExists();
    String raceWithThisNameAlreadyExistsInRegatta();
    String headUp();
    String bearAway();
    String tack();
    String jibe();
    String penaltyCircle();
    String markPassing();
    String mark();
    String otherManeuver();
    String douglasPeuckerPoints();
    String filterRacesByName();
    String actionEdit();
    String actionEditScores();
    String actionOpenBrowser();
    String actionRemove();
    String actionEditRaces();
    String actionRaceEdit();
    String actionRaceUnlink();
    String actionRaceRemove();
    String filterLeaderboardsByName();
    String windwardDistanceToLeader();
    String actions();
    String islinked();
    String yes();
    String no();
    String hoverOverAPoint();
    String noSelection();
    String raceIsKnownToStartUpwind();
    String events();
    String settingsForComponent(String localizedComponentName);
    String noEventsFound();
    String noEventSelected();
    String noLeaderboardsFound();
    String searchEvents();
    String location();
    String from();
    String until();
    String onlyLiveEvents();
    String locationNotAvailable();
    String startDateNotAvailable();
    String startDate();
    String unknownManeuver();
    String tailLengthMustBePositive();
    String failedToLoadRaceInformation(String message);
    String competitorPassedMarkAtDate(String competitorName, String markName, String dateTime);
    String valueForCompetitorAt(String competitorName, String dateTime, String valueWithUnit);
    String reallyRemoveRace(String string);
    String showDetails();
    String hideLeaderboard();
    String hideLeaderboards();
    String showLeaderboard();
    String hideRaces();
    String showMap();
    String hideMap();
    String noLeaderboardSelected();
    String leaderboardGroups();
    String filterLeaderboardGroupsByName();
    String createNewLeaderboardGroup();
    String leaderboardGroupConfiguration();
    String legs();
    String currentLeg();
    String leaderboardGroup();
    String pleaseEnterNonEmptyDescription();
    String groupWithThisNameAlreadyExists();
    String detailsOfLeaderboardGroup();
    String edit();
    String save();
    String abort();
    String noLeaderboardGroupWithNameFound(String groupName);
    String overview();
    String welcomeToSailingAnalytics();
    String welcomeToSailingAnalyticsBody();
    String home();
    String clickAndDragToZoomIn();
    String windSpeed();
    String allTimesInUTC();
    String autoZoomTo();
    String autoZoomToBoats();
    String autoZoomToBuoys();
    String autoZoomOff();
    String autoZoomToTails();
    String autoZoomToWindSensors();
    String autoZoomSelectedCompetitors();
    String bearing();
    String zoom();
    String stepSizeMustBeGreaterThanNull();
    String stepSizeInSeconds();
    String refreshInterval();
    String refreshIntervalMustBeGreaterThanXSeconds(String seconds);
    String competitorCharts();
    String selectAtLeastOneCompetitor();
    String directionChange();
    String speedChange();
    String degreesShort();
    String untracked();
    String delayForLiveMode();
    String notAvailable();
    String details();
    String noGroupSelected();
    String combinedWindSourceTypeName();
    String courseBasedWindSourceTypeName();
    String trackBasedEstimationWindSourceTypeName();
    String expeditionWindSourceTypeName();
    String webWindSourceTypeName();
    String clickChartToSetTime();
    String position();
    String windSourcesUsed();
    String errorTryingToUpdateWindSourcesToExclude(String raceName, String message);
    String feedback();
    String startStopPlaying();
    String backToLive();
    String slowPlaySpeedDown();
    String speedPlaySpeedUp();
    String showHideComponent(String localizedShortName);
    String degreesBoatToTheWind();
    String racesInLeaderboard();
    String leaderboardsInGroup();
    String replication();
    String errorFetchingReplicaData(String message);
    String averageCrossTrackErrorInMeters();
    String enterMaster();
    String errorStartingReplication(String hostname, String exchangeName, String message);
    String helpLines();
    String startLine();
    String finishLine();
    String advantageLine();
    String courseMiddleLine();
    String messagingPortNumber();
    String servletPortNumber();
    String registeredAt(String string);
    String replicatingFromMaster(String hostname, int jmsPort, int servletPort);
    String showWindSpeedSeries();
    String showWindDirectionSeries();
    String fleet();
    String boatClass();
    String setDelayToLive();
    String pleaseEnterNonEmptyVenue();
    String eventWithThisNameAlreadyExists();
    String venue();
    String pleaseSelectABoatClass();
    String regattaWithThisNameAlreadyExists();
    String seriesWithThisNameAlreadyExists();
    String fleetWithThisNameAlreadyExists();
    String fleets();
    String series();
    String splitFleet();
    String color();
    String medalSeries();
    String noColor();
    String pleaseSelectARegatta();
    String addFleet();
    String doYouReallyWantToRemoveRegatta(String name);
    String errorLoadingScoreCorrectionProviders(String message);
    String selectResultListToImportFrom();
    String of();
    String errorObtainingScoreCorrections(String scoreCorrectionProviderName, String eventName, String boatClassName,
            String string, String message);
    String assignRaceNumbersToRaceColumns();
    String importOfficialResults();
    String selectAll();
    String apply();
    String successfullyUpdatedScores();
    String errorUpdatingScoresForLeaderboard(String leaderboardName, String message);
    String maneuverTypesToShowWhenCompetitorIsClicked();
    String simulateWithStartTimeNow();
    String boatClassDoesNotMatchSelectedRegatta(String boatClass, String regattaName);
    String regattaExistForSelectedBoatClass();
    String reload();
    String addRegatta();
    String exchangeName();
    String course();
    String courseLayout();
    String buoy();
    String gate();
    String buoys();
    String waypoint();
    String showAllCompetitors();
    String boatTails();
    String maximalCount();
    String maxVisibleCompetitorsCountMustBePositive();
    String fregResultImportUrls();
    String errorRefreshingFregUrlList(String message);
    String successfullyUpdatedFregUrls();
    String errorRemovingFregUrls(String message);
    String pleaseEnterNonEmptyUrl();
    String addFragUrl();
    String errorAddingFragUrl(String message);
    String errorTryingToObtainLeaderboardContents(String message);
    String lastScoreUpdate();
    String warningBrowserUnsupported();
    String newMark();
    String controlPoint();
    String errorUpdatingRaceCourse(String message);
    String successfullyUpdatedCourse();
    String selectOneMarkOrTwoMarksForGate();
    String errorTryingToObtainTheMarksOfTheRace(String message);
    String errorTryingToObtainRaceCourse(String message);
    String insertWaypointBeforeSelected();
    String insertWaypointAfterSelected();
    String scoringSchemeLowPointSystem();
    String scoringSchemeHighPointSystem();
    String scoringSystem();
    String createFlexibleLeaderboard();
    String createRegattaLeaderboard();
    String editFlexibleLeaderboard();
    String editRegattaLeaderboard();
    String noRegatta();
    String useOverallLeaderboard();
    String overallStandings();
    String scoringSchemeHighPointEssOverall();
    String scoringSchemeHighPointLastBreaksTie();
    String type();
    String actionAddRaces();
    String racesWithNamePrefix();
    String maximumSpeedOverGroundInKnots();
    String totalTimeSailedDownwindInSeconds();
    String totalTimeSailedUpwindInSeconds();
    String totalTimeSailedReachingInSeconds();
    String totalTimeSailedInSeconds();
    String overallDetailsToShow();
    String hhmmssUnit();
    String actionAddWindData();
    String valueMustBeBetweenMinMax(String name, String minValue, String maxValue);
    String optional();
    String pleaseEnterAValue();
    String latitude();
    String longitude();
    String actionAddEvent();
    String publicationUrl();
    String suppress();
    String isPublic();
    String unsuppress();
    String suppressedCompetitors();
    String pleaseSelectASeries();
    String pleaseSelectARace();
    String displayGroupsInReverseOrder();
    String actionConfigureUrl();
    String configureLeaderboardUrlDescription();
    String embedded();
    String additionalUrlSettings();
    String restrictToSingleSelectedRace();
    String expandSelectedRace();
    String showRaceDetails();
    String numberOfRaces();
    String numberOfRacesMustBeNonNegativeNumber();
    String chooseTheWayYouSelectRaces();
    String selectFromAllRaces();
    String selectANumberOfRaces();
    String numberOfLastNRaces();
    String expandLastRace();
    String factor();
    String errorUpdatingIsMedalRace(String message);
    String maneuverLoss();
    String averageManeuverLossInMeters();
    String averageTackLossInMeters();
    String averageJibeLossInMeters();
    String shape();
    String pattern();
    String legend();
    String live();
    String errorFetchingRankingChartData(String message);
    String loadingCompetitorData();
    String rankNAfterRace(long l, String string);
    String afterRace();
    String showRankChart();
}
