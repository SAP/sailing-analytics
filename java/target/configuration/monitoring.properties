# check interval in milliseconds, not lower than 10 seconds
monitor.interval = 30000

# time the monitoring server waits before polling, in milliseconds
monitor.gracetime = 10000

# time between interval checks, in milliseconds
monitor.pause = 1000

# timeout before a port is deemed not responding, in milliseconds
monitor.timeout = 2000

# how long the monitor should wait before calling
# the failure handler for a second failure - this
# avoids having a service restarted many times
# this number should be slightly higher than monitor.interval;
# provided in milliseconds
monitor.wait_after_failure = 60000

# endpoints that should be checked, separate by comma
# two formats are valid, each yielding a different check
#  - address:port
#    This format leads to a simple port check. Use this if
#    you want to check if a server is still running (e.g. jetty)
#
#  - http://domain_or_address/path/to/check
#    This format leads to a check that only succeeds if a status
#    code of 200 is returned.
monitor.endpoints = http://127.0.0.1:8886/gwt/Leaderboard.html, http://127.0.0.1:8886/sailingserver/moderator?action=listevents, http://127.0.0.1:8886/events/ess40/index.html, http://127.0.0.1:8886/

# bundle associated to endpoints
monitor.bundles = com.sap.sailing.gwt.ui, com.sap.sailing.server.gateway, com.sap.sailing.www.events, com.sap.sailing.www

# mail configuration
mail.from = info@sapsailing.com
mail.to = axel.uhl@sap.com, axel.uhl@gmx.de, fmittag@gmx.net
mail.transport.protocol = smtp
mail.smtp.host = 127.0.0.1
mail.smtp.port = 25
mail.smtp.auth = true
mail.smtp.user = 
mail.smtp.password = 
