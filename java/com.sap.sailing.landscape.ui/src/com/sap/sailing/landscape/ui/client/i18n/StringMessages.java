package com.sap.sailing.landscape.ui.client.i18n;

import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.LocalizableResource.DefaultLocale;

@DefaultLocale("en")
public interface StringMessages extends com.sap.sse.gwt.client.StringMessages,
com.sap.sse.security.ui.client.i18n.StringMessages,
com.sap.sse.gwt.adminconsole.StringMessages {
    public static final StringMessages INSTANCE = GWT.create(StringMessages.class);

    String region();
    String images();
    String imageType();
    String upgrade();
    String replicaSet();
    String awsCredentials();
    String awsAccessKey();
    String awsSecret();
    String creator();
    String creationTime();
    String sshKeys();
    String publicKey();
    String privateKey();
    String pleaseProvidePublicKey();
    String pleaseProvidePrivateKey();
    String pleaseProvideKeyPairName();
    String generate();
    String pleaseProvidePassphrase();
    String pleaseRepeatPassphrase();
    String passphrasesDontMatch();
    String showKeys();
    String download();
    String encryptedPrivateKey();
    String sshPrivateKeyPassphraseForSelectedKeyPair();
    String state();
    String createdAt();
    String mongoEndpoints();
    String machineImages();
    String doYouReallyWantToRemoveMachineImage(String name, String id, String regionId);
    String successfullyRemovedMachineImage(String name, String id, String regionId);
    String successfullyUpgradedMachineImage(String name, String id, String regionId, String newName);
    String startedImageUpgrade(String name, String id, String regionId);
    String showNewestOnlyPerType();
    String scale();
    String youCannotShutdownMongoDBInstancesNotRunningOnDefaultPort(String hostnamesAndPortsToShutdown);
    String successfullyScaledMongoDB();
    String mongoInstancesToStop();
    String showOnlyInstanceYouCanStop();
    String mongoInstancesToLaunch();
    String numberOfMongoInstancesToLaunch();
    String priority();
    String votes();
    String instanceType();
    String youHaveToProvideAPositiveNumberOfInstancesToLaunch();
    String youHaveToProvideANonNegativePriority();
    String youHaveToProvideANonNegativeNumberOfVotes();
    String mfaTokenCode();
    String login();
    String invalidCredentialsNoSessionCreated(String message);
    String loggedInSuccessfully();
    String logout();
    String loggedOutSuccessfully();
    String port();
    String instanceId();
    String launchTimePoint();
    String applicationReplicaSets();
    String masterHostName();
    String masterPort();
    String masterServerName();
    String masterInstanceId();
    String replicas();
    String versionHeader();
    String archive();
    String startTimePoint();
    String createApplicationReplicaSet();
    String useDynamicLoadBalancer();
    String bearerTokenForSecurityReplication();
    String successfullyCreatedReplicaSet(String name);
    String pleaseProvideApplicationReplicaSetName();
    String pleaseSelectInstanceTypeForNewMaster();
    String pleaseProvideBearerTokenForSecurityReplication();
    String domainName();
    String release();
    String reallyRemoveApplicationReplicaSet(String name);
    String pleaseSelectSshKeyPair();
    String defineLandingPage();
    String successfullyUpdatedLandingPage();
    String defineDefaultRedirect();
    String defineDefaultRedirectMessage();
    String redirectPlain();
    String redirectHome();
    String redirectEvent();
    String redirectEventSeries();
    String pleaseProvideAValidId();
    String defaultRedirectPath();
    String successfullyCreatedLoadBalancerMappingFor(String name);
    String createLoadBalancerMapping();
    String forceDNSUpdate();
    String latestMasterRelease();
    String successfullyUpgradedApplicationReplicaSet(String name, String version);
    String upgradingApplicationReplicaSetFailed(String name);
    String upgradeApplicationReplicaSet();
    String successfullyArchivedReplicaSet(String name);
    String removeArchivedReplicaSet();
    String bearerTokenOrNullForApplicationReplicaSetToArchive(String replicaSetName);
    String bearerTokenOrNullForArchive();
    String numberOfMinutesBeforeAndBetweenCompareServers();
    String numberOfCompareServersAttempts();
    String replicaReplicationBearerToken();
    String memoryInMegabytes();
    String memoryTotalSizeFactor();
    String launchAnotherReplicaSetOnThisMaster();
    String ensureAtLeastOneReplicaExistsStopReplicatingAndRemoveMasterFromTargetGroups();
    String successfullyStoppedReplicatingAndRemovedMasterFromTargetGroups();
}
